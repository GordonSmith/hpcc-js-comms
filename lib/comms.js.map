{"version":3,"file":"comms.js","sources":["../src/util/runtime.ts","../src/util/string.ts","../src/comms/transport.ts","../src/comms/xhr.ts","../src/comms/jsonp.ts","../src/comms/index.ts","../src/collections/stack.ts","../src/util/SAXParser.ts","../src/esp/comms/transport.ts","../src/esp/services/WsWorkunits.ts","../src/esp/services/WsTopology.ts","../src/esp/services/WsSMC.ts","../src/esp/services/WsDFU.ts","../src/util/hashSum.ts","../src/util/object.ts","../src/util/observer.ts","../src/collections/stateful.ts","../src/util/Logging.ts","../src/esp/ecl/Graph.ts","../src/esp/ecl/Resource.ts","../src/esp/ecl/Result.ts","../src/esp/ecl/SourceFile.ts","../src/util/esp.ts","../src/esp/ecl/Timer.ts","../src/esp/ecl/Workunit.ts","../src/index.ts","../src/index-node.ts"],"sourcesContent":["export const root = new Function(\"try {return global;}catch(e){return window;}\")();\r\n\r\nexport const isBrowser = new Function(\"try {return this===window;}catch(e){ return false;}\");\r\nexport const isNode = new Function(\"try {return this===global;}catch(e){return false;}\");\r\nexport const isTravis = new Function(\"try {return process.env.TRAVIS ;}catch(e){return false;}\");\r\n","export function endsWith(origString: string, searchString: string, position?: number) {\r\n    const subjectString = origString.toString();\r\n    if (typeof position !== \"number\" || !isFinite(position) || Math.floor(position) !== position || position > subjectString.length) {\r\n        position = subjectString.length;\r\n    }\r\n    position -= searchString.length;\r\n    const lastIndex = subjectString.lastIndexOf(searchString, position);\r\n    return lastIndex !== -1 && lastIndex === position;\r\n}\r\n","import { endsWith } from \"../util/string\";\r\n\r\nexport type ResponseType = \"json\" | \"text\";\r\n\r\nexport type TransportOptions = {\r\n    baseUrl: string,\r\n    userID?: string,\r\n    password?: string,\r\n    [key: string]: any\r\n};\r\nexport interface ITransport {\r\n    send(action: string, request: any, responseType?: ResponseType): Promise<any>;\r\n    opts(_: TransportOptions): this;\r\n    opts(): TransportOptions;\r\n}\r\n\r\nexport class Transport {\r\n    protected _opts: TransportOptions;\r\n\r\n    constructor(baseUrl: string) {\r\n        this.opts({ baseUrl });\r\n    }\r\n\r\n    opts(_: TransportOptions): this;\r\n    opts(): TransportOptions;\r\n    opts(_?: TransportOptions): this | TransportOptions {\r\n        if (arguments.length === 0) return this._opts;\r\n        this._opts = { ...this._opts, ..._ };\r\n        return this;\r\n    }\r\n\r\n    protected serialize(obj: any) {\r\n        const str: string[] = [];\r\n        for (const key in obj) {\r\n            if (obj.hasOwnProperty(key)) {\r\n                str.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(obj[key]));\r\n            }\r\n        }\r\n        return str.join(\"&\");\r\n    }\r\n\r\n    deserialize(body: string) {\r\n        return JSON.parse(body);\r\n    }\r\n\r\n    stripSlashes(str: string) {\r\n        while (str.indexOf(\"/\") === 0) {\r\n            str = str.substring(1);\r\n        }\r\n        while (endsWith(str, \"/\")) {\r\n            str = str.substring(0, str.length - 1);\r\n        }\r\n        return str;\r\n    }\r\n\r\n    joinUrl(...args: string[]) {\r\n        return this.stripSlashes(this._opts.baseUrl) + \"/\" + args.map((arg) => {\r\n            return this.stripSlashes(arg);\r\n        }).join(\"/\");\r\n    }\r\n}\r\n","import { ITransport, ResponseType, Transport } from \"./transport\";\r\n\r\nexport { ITransport } from \"./transport\";\r\n\r\nlet _nodeRequest = null;\r\nexport function initNodeRequest(request) {\r\n    _nodeRequest = request;\r\n}\r\n\r\nlet _d3Request = null;\r\nexport function initD3Request(request) {\r\n    _d3Request = request;\r\n}\r\n\r\nexport class XHRTransport extends Transport implements ITransport {\r\n    timeout: number;\r\n    verb: \"GET\" | \"POST\";\r\n    userID: string;\r\n    password: string;\r\n    rejectUnauthorized: boolean;\r\n\r\n    constructor(baseUrl: string, verb: \"GET\" | \"POST\", userID: string = \"\", password: string = \"\", rejectUnauthorized: boolean = true) {\r\n        super(baseUrl);\r\n        this.verb = verb;\r\n        this.userID = userID;\r\n        this.password = password;\r\n        this.rejectUnauthorized = rejectUnauthorized;\r\n    }\r\n\r\n    private nodeRequestSend(action: string, request: any, responseType: ResponseType = \"json\"): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            const options: any = {\r\n                method: this.verb,\r\n                uri: this.joinUrl(action),\r\n                auth: {\r\n                    user: this.userID,\r\n                    pass: this.password,\r\n                    sendImmediately: true\r\n                },\r\n                username: this.userID,\r\n                password: this.password\r\n            };\r\n            switch (this.verb) {\r\n                case \"GET\":\r\n                    options.uri += \"?\" + this.serialize(request);\r\n                    break;\r\n                case \"POST\":\r\n                    options.headers = {\r\n                        \"X-Requested-With\": \"XMLHttpRequest\",\r\n                        \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n                    };\r\n                    options.rejectUnauthorized = this.rejectUnauthorized;\r\n                    options.body = this.serialize(request);\r\n                    break;\r\n                default:\r\n            }\r\n            _nodeRequest(options, (err, resp, body) => {\r\n                if (err) {\r\n                    reject(new Error(err));\r\n                } else if (resp && resp.statusCode === 200) {\r\n                    resolve(responseType === \"json\" ? this.deserialize(body) : body);\r\n                } else {\r\n                    reject(new Error(body));\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    private d3Send(action: string, request: any, responseType: ResponseType = \"json\"): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            const options: any = {\r\n                method: this.verb,\r\n                uri: this.joinUrl(action),\r\n                auth: {\r\n                    user: this.userID,\r\n                    pass: this.password,\r\n                    sendImmediately: true\r\n                },\r\n                username: this.userID,\r\n                password: this.password\r\n            };\r\n            switch (this.verb) {\r\n                case \"GET\":\r\n                    options.uri += \"?\" + this.serialize(request);\r\n                    break;\r\n                case \"POST\":\r\n                    options.headers = {\r\n                        \"X-Requested-With\": \"XMLHttpRequest\",\r\n                        \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n                    };\r\n                    options.rejectUnauthorized = this.rejectUnauthorized;\r\n                    options.body = this.serialize(request);\r\n                    break;\r\n                default:\r\n            }\r\n            const xhr = _d3Request(options.uri);\r\n            if (this.verb === \"POST\") {\r\n                xhr\r\n                    .header(\"X-Requested-With\", \"XMLHttpRequest\")\r\n                    .header(\"Content-Type\", \"application/x-www-form-urlencoded\")\r\n                    .header(\"Origin\", null)\r\n                    ;\r\n            }\r\n            xhr\r\n                .send(this.verb, options.body, (err, req) => {\r\n                    if (err) {\r\n                        reject(new Error(err));\r\n                    } else if (req && req.status === 200) {\r\n                        resolve(responseType === \"json\" ? this.deserialize(req.responseText) : req.responseText);\r\n                    } else {\r\n                        reject(new Error(req.responseText));\r\n                    }\r\n                });\r\n        });\r\n    }\r\n\r\n    send(action: string, request: any, responseType: ResponseType = \"json\"): Promise<any> {\r\n        if (_nodeRequest) {\r\n            return this.nodeRequestSend(action, request, responseType);\r\n        } else if (_d3Request) {\r\n            return this.d3Send(action, request, responseType);\r\n        }\r\n        throw new Error(\"No transport\");\r\n    }\r\n}\r\n\r\nexport class XHRGetTransport extends XHRTransport implements ITransport {\r\n    constructor(baseUrl: string, userID: string = \"\", password: string = \"\", rejectUnauthorized: boolean = true) {\r\n        super(baseUrl, \"GET\", userID, password, rejectUnauthorized);\r\n    }\r\n}\r\nexport class XHRPostTransport extends XHRTransport implements ITransport {\r\n    constructor(baseUrl, userID: string = \"\", password: string = \"\", rejectUnauthorized: boolean = true) {\r\n        super(baseUrl, \"POST\", userID, password, rejectUnauthorized);\r\n    }\r\n}\r\n","import { ITransport, Transport } from \"./transport\";\r\n\r\nexport class JSONPTransport extends Transport implements ITransport {\r\n    timeout: number;\r\n\r\n    constructor(baseUrl: string, timeout: number = 60) {\r\n        super(baseUrl);\r\n        this.timeout = timeout;\r\n    }\r\n\r\n    send(action: string, request: any): Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            let respondedTimeout = this.timeout * 1000;\r\n            const respondedTick = 5000;\r\n            const callbackName = \"jsonp_callback_\" + Math.round(Math.random() * 999999);\r\n            window[callbackName] = function (response) {\r\n                respondedTimeout = 0;\r\n                doCallback();\r\n                resolve(response);\r\n            };\r\n            const script = document.createElement(\"script\");\r\n            let url = this.joinUrl(action);\r\n            url += url.indexOf(\"?\") >= 0 ? \"&\" : \"?\";\r\n            script.src = url + \"jsonp=\" + callbackName + \"&\" + this.serialize(request);\r\n            document.body.appendChild(script);\r\n            const progress = setInterval(function () {\r\n                if (respondedTimeout <= 0) {\r\n                    clearInterval(progress);\r\n                } else {\r\n                    respondedTimeout -= respondedTick;\r\n                    if (respondedTimeout <= 0) {\r\n                        clearInterval(progress);\r\n                        // console.log(\"Request timeout:  \" + script.src);\r\n                        doCallback();\r\n                        reject(Error(\"Request timeout:  \" + script.src));\r\n                    } else {\r\n                        // console.log(\"Request pending (\" + respondedTimeout / 1000 + \" sec):  \" + script.src);\r\n                    }\r\n                }\r\n            }, respondedTick);\r\n\r\n            function doCallback() {\r\n                delete window[callbackName];\r\n                document.body.removeChild(script);\r\n            }\r\n        });\r\n    };\r\n}\r\n","import { JSONPTransport } from \"./jsonp\";\r\nimport { ITransport, TransportOptions } from \"./transport\";\r\nimport { XHRGetTransport, XHRPostTransport } from \"./xhr\";\r\n\r\nexport {\r\n    ITransport,\r\n    JSONPTransport,\r\n    XHRPostTransport,\r\n    XHRGetTransport\r\n};\r\n\r\nexport type ITransportFactory = (baseUrl: string) => ITransport;\r\nexport let createTransport: ITransportFactory = function (baseUrl: string, opts?: TransportOptions): ITransport {\r\n    const retVal = new XHRPostTransport(baseUrl);\r\n    if (opts) {\r\n        retVal.opts(opts);\r\n    }\r\n    return retVal;\r\n};\r\n\r\nexport function setTransportFactory(newFunc: ITransportFactory): ITransportFactory {\r\n    const retVal = createTransport;\r\n    createTransport = newFunc;\r\n    return retVal;\r\n}\r\n","/**\r\n * A generic Stack\r\n */\r\nexport class Stack<T> {\r\n    private stack: T[] = [];\r\n\r\n    /**\r\n     * Push element onto the stack\r\n     *\r\n     * @param e - element to push\r\n     */\r\n    push(e: T) {\r\n        this.stack.push(e);\r\n        return e;\r\n    }\r\n\r\n    /**\r\n     * Pop element off the stack\r\n     */\r\n    pop(): T | undefined {\r\n        return this.stack.pop();\r\n    }\r\n\r\n    /**\r\n     * Top item on the stack\r\n     *\r\n     * @returns Top element on the stack\r\n     */\r\n    top(): T | undefined {\r\n        return this.stack.length ? this.stack[this.stack.length - 1] : undefined;\r\n    }\r\n\r\n    /**\r\n     * Depth of stack\r\n     *\r\n     * @returns Depth\r\n     */\r\n    depth(): number {\r\n        return this.stack.length;\r\n    }\r\n}\r\n","import { Stack } from \"../collections/stack\";\r\n// import { DOMParser } from \"../platform/node\";\r\n\r\nexport type PrimativeValue = string;\r\nexport type PrimativeValueMap = { [key: string]: PrimativeValue };\r\nexport class XMLNode {\r\n    name: string = \"\";\r\n    attributes: PrimativeValueMap = {};\r\n    children: XMLNode[] = [];\r\n    content: string = \"\";\r\n\r\n    constructor(node) {\r\n        this.name = node.name;\r\n    }\r\n\r\n    appendAttribute(key: string, val: string) {\r\n        this.attributes[key] = val;\r\n    }\r\n\r\n    appendContent(content: string) {\r\n        this.content += content;\r\n    }\r\n\r\n    appendChild(child: XMLNode) {\r\n        this.children.push(child);\r\n    }\r\n}\r\n\r\nexport class SAXStackParser {\r\n    root: XMLNode;\r\n    stack: Stack<XMLNode> = new Stack<XMLNode>();\r\n\r\n    constructor() {\r\n    }\r\n\r\n    private walkDoc(node: Node) {\r\n        this.startXMLNode({\r\n            name: node.nodeName\r\n        });\r\n        if (node.attributes) {\r\n            for (let i = 0; i < node.attributes.length; ++i) {\r\n                const attribute = node.attributes.item(i);\r\n                this.attributes(attribute.nodeName, attribute.nodeValue);\r\n            }\r\n        }\r\n        if (node.childNodes) {\r\n            for (let i = 0; i < node.childNodes.length; ++i) {\r\n                const childNode = node.childNodes.item(i);\r\n                if (childNode.nodeType === childNode.TEXT_NODE) {\r\n                    this.characters(childNode.nodeValue);\r\n                } else {\r\n                    this.walkDoc(childNode);\r\n                }\r\n            }\r\n        }\r\n        this.endXMLNode({\r\n            name: node.nodeName\r\n        });\r\n    }\r\n\r\n    parse(xml: string) {\r\n        const domParser = new DOMParser();\r\n        const doc = domParser.parseFromString(xml, \"application/xml\");\r\n        this.startDocument();\r\n        this.walkDoc(doc);\r\n        this.endDocument();\r\n    }\r\n\r\n    //  Callbacks  ---\r\n    startDocument() {\r\n    }\r\n\r\n    endDocument() {\r\n    }\r\n\r\n    startXMLNode(node): XMLNode {\r\n        const newNode = new XMLNode(node);\r\n        if (!this.stack.depth()) {\r\n            this.root = newNode;\r\n        } else {\r\n            this.stack.top().appendChild(newNode);\r\n        }\r\n        return this.stack.push(newNode);\r\n    }\r\n\r\n    endXMLNode(_): XMLNode {\r\n        return this.stack.pop();\r\n    }\r\n\r\n    attributes(key, val) {\r\n        this.stack.top().appendAttribute(key, val);\r\n    }\r\n\r\n    characters(text) {\r\n        this.stack.top().appendContent(text);\r\n    }\r\n}\r\n\r\nexport function xml2json(xml): XMLNode {\r\n    const saxParser = new SAXStackParser();\r\n    saxParser.parse(xml);\r\n    return saxParser.root;\r\n}\r\n\r\nexport class XSDNode {\r\n    protected e?: XMLNode;\r\n\r\n    constructor(e: XMLNode) {\r\n        this.e = e;\r\n    }\r\n    fix() {\r\n        delete this.e;\r\n    }\r\n}\r\n\r\nexport class XSDXMLNode extends XSDNode {\r\n    name: string;\r\n    type: string;\r\n    private children: XSDXMLNode[] = [];\r\n\r\n    constructor(e: XMLNode) {\r\n        super(e);\r\n    }\r\n\r\n    append(child: XSDXMLNode) {\r\n        this.children.push(child);\r\n    }\r\n\r\n    fix() {\r\n        this.name = this.e.attributes[\"name\"];\r\n        this.type = this.e.attributes[\"type\"];\r\n        for (let i = this.children.length - 1; i >= 0; --i) {\r\n            const row = this.children[i];\r\n            if (row.name === \"Row\" && row.type === undefined) {\r\n                this.children.push(...row.children);\r\n                this.children.splice(i, 1);\r\n            }\r\n        }\r\n        super.fix();\r\n    }\r\n}\r\n\r\nexport class XSDSimpleType extends XSDNode {\r\n    name: string;\r\n    type: string;\r\n    maxLength: number;\r\n\r\n    protected _restricition?: XMLNode;\r\n    protected _maxLength?: XMLNode;\r\n\r\n    constructor(e: XMLNode) {\r\n        super(e);\r\n    }\r\n\r\n    append(e: XMLNode) {\r\n        switch (e.name) {\r\n            case \"xs:restriction\":\r\n                this._restricition = e;\r\n                break;\r\n            case \"xs:maxLength\":\r\n                this._maxLength = e;\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n\r\n    fix() {\r\n        this.name = this.e.attributes[\"name\"];\r\n        this.type = this._restricition.attributes[\"base\"];\r\n        this.maxLength = +this._maxLength.attributes[\"value\"];\r\n        delete this._restricition;\r\n        delete this._maxLength;\r\n        super.fix();\r\n    }\r\n}\r\n\r\nexport class XSDSchema {\r\n    root: XSDXMLNode;\r\n    simpleTypes: { [name: string]: XSDSimpleType } = {};\r\n\r\n    calcWidth(type, name) {\r\n        let retVal: number = -1;\r\n\r\n        switch (type) {\r\n            case \"xs:boolean\":\r\n                retVal = 5;\r\n                break;\r\n            case \"xs:integer\":\r\n                retVal = 8;\r\n                break;\r\n            case \"xs:nonNegativeInteger\":\r\n                retVal = 8;\r\n                break;\r\n            case \"xs:double\":\r\n                retVal = 8;\r\n                break;\r\n            case \"xs:string\":\r\n                retVal = 32;\r\n                break;\r\n            default:\r\n                const numStr: string = \"0123456789\";\r\n                const underbarPos: number = type.lastIndexOf(\"_\");\r\n                const length: number = underbarPos > 0 ? underbarPos : type.length;\r\n                let i: number = length - 1;\r\n                for (; i >= 0; --i) {\r\n                    if (numStr.indexOf(type.charAt(i)) === -1)\r\n                        break;\r\n                }\r\n                if (i + 1 < length) {\r\n                    retVal = parseInt(type.substring(i + 1, length), 10);\r\n                }\r\n                if (type.indexOf(\"data\") === 0) {\r\n                    retVal *= 2;\r\n                }\r\n                break;\r\n        }\r\n        if (retVal < name.length)\r\n            retVal = name.length;\r\n\r\n        return retVal;\r\n    }\r\n}\r\n\r\nclass XSDParser extends SAXStackParser {\r\n    schema: XSDSchema = new XSDSchema();\r\n    simpleType: XSDSimpleType;\r\n    simpleTypes: { [name: string]: XSDSimpleType } = {};\r\n\r\n    xsdStack: Stack<XSDXMLNode> = new Stack<XSDXMLNode>();\r\n\r\n    startXMLNode(node): XMLNode {\r\n        const e = super.startXMLNode(node);\r\n        switch (e.name) {\r\n            case \"xs:element\":\r\n                const xsdXMLNode = new XSDXMLNode(e);\r\n                if (!this.schema.root) {\r\n                    this.schema.root = xsdXMLNode;\r\n                } else if (this.xsdStack.depth()) {\r\n                    this.xsdStack.top().append(xsdXMLNode);\r\n                }\r\n                this.xsdStack.push(xsdXMLNode);\r\n                break;\r\n            case \"xs:simpleType\":\r\n                this.simpleType = new XSDSimpleType(e);\r\n            default:\r\n                break;\r\n        }\r\n        return e;\r\n    }\r\n\r\n    endXMLNode(node): XMLNode {\r\n        const e = this.stack.top();\r\n        switch (e.name) {\r\n            case \"xs:element\":\r\n                const xsdXMLNode = this.xsdStack.pop();\r\n                xsdXMLNode.fix();\r\n                break;\r\n            case \"xs:simpleType\":\r\n                this.simpleType.fix();\r\n                this.simpleTypes[this.simpleType.name] = this.simpleType;\r\n                delete this.simpleType;\r\n                break;\r\n            default:\r\n                if (this.simpleType) {\r\n                    this.simpleType.append(e);\r\n                }\r\n        }\r\n        return super.endXMLNode(node);\r\n    }\r\n}\r\n\r\nexport function parseXSD(xml): XSDSchema {\r\n    const saxParser = new XSDParser();\r\n    saxParser.parse(xml);\r\n    return saxParser.schema;\r\n}\r\n","import { ITransport, ResponseType, Transport } from \"../../comms/transport\";\r\n\r\nexport function isArray(arg: any) {\r\n    return Object.prototype.toString.call(arg) === \"[object Array]\";\r\n};\r\n\r\nexport interface Exception {\r\n    Code: number;\r\n    Message: string;\r\n}\r\n\r\nexport interface Exceptions {\r\n    Source: string;\r\n    Exception: Exception[];\r\n}\r\n\r\nexport class ESPExceptions extends Error implements Exceptions {\r\n    readonly isESPExceptions = true;\r\n    action: string;\r\n    request: string;\r\n    Source: string;\r\n    Exception: Exception[];\r\n\r\n    constructor(action: string, request: any, exceptions: Exceptions) {\r\n        super(\"ESPException:  \" + exceptions.Source);\r\n        this.action = action;\r\n        this.request = request;\r\n        this.Source = exceptions.Source;\r\n        this.Exception = exceptions.Exception;\r\n    }\r\n}\r\n\r\nexport class ESPTransport extends Transport {\r\n    private _transport: ITransport;\r\n    private _service: string;\r\n    private _version: string;\r\n\r\n    constructor(transport: ITransport, service: string, version: string) {\r\n        super(\"\");\r\n        this._transport = transport;\r\n        this._service = service;\r\n        this._version = version;\r\n    }\r\n\r\n    toESPStringArray(target: any, arrayName: string): Object {\r\n        if (isArray(target[arrayName])) {\r\n            for (let i = 0; i < target[arrayName].length; ++i) {\r\n                target[arrayName + \"_i\" + i] = target[arrayName][i];\r\n            }\r\n            delete target[arrayName];\r\n        }\r\n        return target;\r\n    }\r\n\r\n    send(action: string, _request: any = {}, responseType: ResponseType = \"json\"): Promise<any> {\r\n        const request = { ..._request, ...{ ver_: this._version } };\r\n        const serviceAction = this.joinUrl(this._service, action + \".json\");\r\n        return this._transport.send(serviceAction, request, responseType).then((response) => {\r\n            if (responseType === \"json\") {\r\n                if (response.Exceptions) {\r\n                    throw new ESPExceptions(action, request, response.Exceptions);\r\n                }\r\n                const retVal = response[`${action === \"WUCDebug\" ? \"WUDebug\" : action}Response`];\r\n                if (!retVal) {\r\n                    throw new ESPExceptions(action, request, {\r\n                        Source: \"ESPConnection.transmit\",\r\n                        Exception: [{ Code: 0, Message: \"Missing Response\" }]\r\n                    });\r\n                }\r\n                return retVal;\r\n            }\r\n            return response;\r\n        });\r\n    }\r\n}\r\n","import { createTransport, ITransport } from \"../../comms/index\";\r\nimport { xml2json, XMLNode } from \"../../util/SAXParser\";\r\nimport { ESPTransport } from \"../comms/transport\";\r\n\r\nexport enum WUStateID {\r\n    Unknown = 0,\r\n    Compiled,\r\n    Running,\r\n    Completed,\r\n    Failed,\r\n    Archived,\r\n    Aborting,\r\n    Aborted,\r\n    Blocked,\r\n    Submitted,\r\n    Scheduled,\r\n    Compiling,\r\n    Wait,\r\n    UploadingFiled,\r\n    DebugPaused,\r\n    DebugRunning,\r\n    Paused,\r\n    LAST,\r\n    NotFound = 999\r\n}\r\n\r\nexport enum WUAction {\r\n    Unknown = 0,\r\n    Compile,\r\n    Check,\r\n    Run,\r\n    ExecuteExisting,\r\n    Pause,\r\n    PauseNow,\r\n    Resume,\r\n    Debug,\r\n    __size\r\n};\r\n\r\nexport interface Query {\r\n    Text: string;\r\n}\r\n\r\nexport interface ECLHelpFile {\r\n    Name: string;\r\n    Type: string;\r\n    IPAddress: string;\r\n    Description: string;\r\n    FileSize: number;\r\n    PID: number;\r\n    minActivityId: number;\r\n    maxActivityId: number;\r\n}\r\n\r\nexport interface Helpers {\r\n    ECLHelpFile: ECLHelpFile[];\r\n}\r\n\r\nexport interface ECLSchemaItem {\r\n    ColumnName: string;\r\n    ColumnType: string;\r\n    ColumnTypeCode: number;\r\n    isConditional: boolean;\r\n}\r\n\r\nexport interface ECLSchemas {\r\n    ECLSchemaItem: ECLSchemaItem[];\r\n}\r\n\r\nexport interface ECLResult {\r\n    Name: string;\r\n    Sequence: number;\r\n    Value: string;\r\n    Link: string;\r\n    FileName: string;\r\n    IsSupplied: boolean;\r\n    ShowFileContent: boolean;\r\n    Total: number;\r\n    ECLSchemas: ECLSchemas;\r\n}\r\n\r\nexport interface Results {\r\n    ECLResult: ECLResult[];\r\n}\r\n\r\nexport interface ECLTimer {\r\n    Name: string;\r\n    Value: string;\r\n    count: number;\r\n    GraphName: string;\r\n    SubGraphId?: number;\r\n}\r\n\r\nexport interface Timers {\r\n    ECLTimer: ECLTimer[];\r\n}\r\n\r\nexport interface DebugValue {\r\n    Name: string;\r\n    Value: string;\r\n}\r\n\r\nexport interface DebugValues {\r\n    DebugValue: DebugValue[];\r\n}\r\n\r\nexport interface ApplicationValue {\r\n    Application: string;\r\n    Name: string;\r\n    Value: string;\r\n}\r\n\r\nexport interface ApplicationValues {\r\n    ApplicationValue: ApplicationValue[];\r\n}\r\n\r\nexport interface AllowedClusters {\r\n    AllowedCluster: string[];\r\n}\r\n\r\nexport interface ECLException {\r\n    Source: string;\r\n    Severity: string;\r\n    Code: number;\r\n    Message: string;\r\n    FileName: string;\r\n    LineNo: number;\r\n    Column: number;\r\n}\r\n\r\nexport interface Exceptions {\r\n    ECLException: ECLException[];\r\n}\r\n\r\nexport interface ECLWorkunit {\r\n    Wuid: string;\r\n    Owner: string;\r\n    Cluster: string;\r\n    Jobname: string;\r\n    StateID: WUStateID;\r\n    State: string;\r\n    Protected: boolean;\r\n    DateTimeScheduled: Date;\r\n    IsPausing: boolean;\r\n    ThorLCR: boolean;\r\n    TotalClusterTime: string;\r\n    ApplicationValues: ApplicationValues;\r\n    HasArchiveQuery: boolean;\r\n}\r\n\r\nexport function isECLWorkunit(_: ECLWorkunit | Workunit): _ is ECLWorkunit {\r\n    return (<ECLWorkunit>_).TotalClusterTime !== undefined;\r\n}\r\n\r\nexport interface ThorLogInfo {\r\n    ProcessName: string;\r\n    ClusterGroup: string;\r\n    LogDate: string;\r\n    NumberSlaves: number;\r\n}\r\n\r\nexport interface ThorLogList {\r\n    ThorLogInfo: ThorLogInfo[];\r\n}\r\n\r\nexport interface ResourceURLs {\r\n    URL: string[];\r\n}\r\n\r\nexport interface Variables {\r\n    ECLVariable: any[];\r\n}\r\n\r\nexport interface ECLGraph {\r\n    Name: string;\r\n    Label: string;\r\n    Type: string;\r\n    Complete: boolean;\r\n    WhenStarted: Date;\r\n    WhenFinished: Date;\r\n}\r\n\r\nexport interface Graphs {\r\n    ECLGraph: ECLGraph[];\r\n}\r\n\r\nexport interface Workunit extends ECLWorkunit {\r\n    StateEx: string;\r\n    ActionEx: string;\r\n    Description: string;\r\n    PriorityClass: number;\r\n    PriorityLevel: number;\r\n    Snapshot: string;\r\n    ResultLimit: number;\r\n    Archived: boolean;\r\n    EventSchedule: number;\r\n    HaveSubGraphTimings: boolean;\r\n    Query: Query;\r\n    Helpers: Helpers;\r\n    Results: Results;\r\n    Timers: Timers;\r\n    Exceptions: Exceptions;\r\n    DebugValues: DebugValues;\r\n    AllowedClusters: AllowedClusters;\r\n    ErrorCount: number;\r\n    WarningCount: number;\r\n    InfoCount: number;\r\n    AlertCount: number;\r\n    GraphCount: number;\r\n    SourceFileCount: number;\r\n    SourceFiles: SourceFiles;\r\n    ResultCount: number;\r\n    VariableCount: number;\r\n    Variables: Variables;\r\n    TimerCount: number;\r\n    HasDebugValue: boolean;\r\n    ApplicationValueCount: number;\r\n    XmlParams: string;\r\n    AccessFlag: number;\r\n    ClusterFlag: number;\r\n    ResultViewCount: number;\r\n    ResourceURLCount: number;\r\n    DebugValueCount: number;\r\n    WorkflowCount: number;\r\n    Graphs: Graphs;\r\n    ThorLogList: ThorLogList;\r\n    ResourceURLs: ResourceURLs;\r\n}\r\n\r\nexport function isWorkunit(_: ECLWorkunit | Workunit): _ is Workunit {\r\n    return (<Workunit>_).StateEx !== undefined;\r\n}\r\n\r\nexport interface WUInfoRequest {\r\n    Wuid: string;\r\n    TruncateEclTo64k?: boolean;\r\n    Type?: string;\r\n    IncludeExceptions?: boolean;\r\n    IncludeGraphs?: boolean;\r\n    IncludeSourceFiles?: boolean;\r\n    IncludeResults?: boolean;\r\n    IncludeResultsViewNames?: boolean;\r\n    IncludeVariables?: boolean;\r\n    IncludeTimers?: boolean;\r\n    IncludeDebugValues?: boolean;\r\n    IncludeApplicationValues?: boolean;\r\n    IncludeWorkflows?: boolean;\r\n    IncludeXmlSchemas?: boolean;\r\n    IncludeResourceURLs?: boolean;\r\n    SuppressResultSchemas?: boolean;\r\n    ThorSlaveIP?: string;\r\n}\r\n\r\nexport interface ECLSourceFile {\r\n    FileCluster: string;\r\n    Name: string;\r\n    Count: number;\r\n}\r\n\r\nexport interface SourceFiles {\r\n    ECLSourceFile: ECLSourceFile[];\r\n}\r\n\r\nexport interface WUInfoResponse {\r\n    Workunit: Workunit;\r\n    AutoRefresh: number;\r\n    CanCompile: boolean;\r\n    ThorSlaveIP?: any;\r\n    ResultViews: any[];\r\n    SecMethod?: any;\r\n}\r\n\r\nexport interface ApplicationValue {\r\n    Application: string;\r\n    Name: string;\r\n    Value: string;\r\n}\r\n\r\nexport interface ApplicationValues {\r\n    ApplicationValue: ApplicationValue[];\r\n}\r\n\r\nexport interface Workunits {\r\n    ECLWorkunit: ECLWorkunit[];\r\n}\r\n\r\nexport interface WUQueryRequest {\r\n    Wuid?: string;\r\n    Owner?: string;\r\n    Jonname?: string;\r\n}\r\n\r\nexport interface WUQueryResponse {\r\n    Type: string;\r\n    LogicalFileSearchType: string;\r\n    Count: number;\r\n    PageSize: number;\r\n    NextPage: number;\r\n    LastPage: number;\r\n    NumWUs: number;\r\n    First: boolean;\r\n    PageStartFrom: number;\r\n    PageEndAt: number;\r\n    Descending: boolean;\r\n    BasicQuery: string;\r\n    Filters: string;\r\n    CacheHint: number;\r\n    Workunits: Workunits;\r\n}\r\n\r\nexport interface WUCreateResponse {\r\n    Workunit: Workunit;\r\n}\r\n\r\nexport interface WUListQueriesRequest {\r\n    QueryID: string;\r\n    QueryName: string;\r\n}\r\n\r\nexport interface WUListQueriesResponse {\r\n}\r\n\r\nexport interface WUUpdateRequest {\r\n    Wuid: string;\r\n    State?: string;\r\n    StateOrig?: string;\r\n    Jobname?: string;\r\n    JobnameOrig?: string;\r\n    QueryText?: string;\r\n    Action?: WUAction;\r\n    Description?: string;\r\n    DescriptionOrig?: string;\r\n    AddDrilldownFields?: boolean;\r\n    ResultLimit?: number;\r\n    Protected?: boolean;\r\n    ProtectedOrig?: boolean;\r\n    PriorityClass?: string;\r\n    PriorityLevel?: string;\r\n    Scope?: string;\r\n    ScopeOrig?: string;\r\n    ClusterSelection?: string;\r\n    ClusterOrig?: string;\r\n    XmlParams?: string;\r\n    ThorSlaveIP?: string;\r\n    QueryMainDefinition?: string;\r\n    DebugValues?: any[];\r\n    ApplicationValues?: any[];\r\n}\r\n\r\nexport interface WUPushEventRequest {\r\n    EventName: string;\r\n    EventText: string;\r\n}\r\n\r\nexport interface WUPushEventResponse {\r\n}\r\n\r\nexport interface WUUpdateResponse {\r\n    Workunit: Workunit;\r\n}\r\n\r\nexport interface WUSubmitRequest {\r\n    Wuid: string;\r\n    Cluster: string;\r\n    Queue?: string;\r\n    Snapshot?: string;\r\n    MaxRunTime?: number;\r\n    BlockTillFinishTimer?: boolean;\r\n    SyntaxCheck?: boolean;\r\n    NotifyCluster?: boolean;\r\n}\r\n\r\nexport interface WUSubmitResponse {\r\n}\r\n\r\nexport interface WUResubmitRequest {\r\n    Wuids: string[];\r\n    ResetWorkflow: boolean;\r\n    CloneWorkunit: boolean;\r\n    BlockTillFinishTimer?: number;\r\n}\r\n\r\nexport interface WU {\r\n    WUID: string;\r\n}\r\n\r\nexport interface WUs {\r\n    WU: WU[];\r\n}\r\n\r\nexport interface WUResubmitResponse {\r\n    WUs: WUs;\r\n}\r\nexport interface WUQueryDetailsRequest {\r\n    QueryId: string;\r\n    QuerySet: string;\r\n    IncludeStateOnClusters: boolean;\r\n    IncludeSuperFiles: boolean;\r\n    IncludeWsEclAddresses: boolean;\r\n    CheckAllNodes: boolean;\r\n}\r\n\r\nexport interface WUQueryDetailsResponse {\r\n    QueryId: string;\r\n    QuerySet: string;\r\n    QueryName: string;\r\n    Wuid: string;\r\n    Dll: string;\r\n    Suspended: boolean;\r\n    Activated: boolean;\r\n    SuspendedBy?: any;\r\n    PublishedBy?: any;\r\n    Comment: string;\r\n    LogicalFiles: any[];\r\n    IsLibrary: boolean;\r\n    Priority?: any;\r\n    WUSnapShot: string;\r\n    CompileTime: Date;\r\n    LibrariesUsed: any[];\r\n    CountGraphs: number;\r\n    GraphIds: any[];\r\n    ResourceURLCount: number;\r\n    WsEclAddresses: any[];\r\n}\r\n\r\nexport type WUActionType = \"SetToFailed\" | \"Pause\" | \"PauseNow\" | \"Resume\" | \"Abort\" | \"Delete\" | \"Restore\" | \"Deschedule\" | \"Reschedule\";\r\nexport interface WUActionRequest {\r\n    Wuids: string[];\r\n    WUActionType: WUActionType;\r\n    Cluster?: string;\r\n    Owner?: string;\r\n    State?: string;\r\n    StartDate?: string;\r\n    EndDate?: string;\r\n    ECL?: string;\r\n    Jobname?: string;\r\n    Test?: string;\r\n    CurrentPage?: number;\r\n    PageSize?: number;\r\n    Sortby?: number;\r\n    Descending?: boolean;\r\n    EventServer?: string;\r\n    EventName?: string;\r\n    PageFrom?: number;\r\n    BlockTillFinishTimer?: number;\r\n}\r\n\r\nexport interface WUActionResult {\r\n    Wuid: string;\r\n    Action: string;\r\n    Result: string;\r\n}\r\n\r\nexport interface ActionResults {\r\n    WUActionResult: WUActionResult[];\r\n}\r\n\r\nexport interface WUActionResponse {\r\n    ActionResults: ActionResults;\r\n}\r\n\r\nexport interface WUGetZAPInfoRequest {\r\n    WUID: string;\r\n}\r\n\r\nexport interface WUGetZAPInfoResponse {\r\n    WUID: string;\r\n    ESPIPAddress: string;\r\n    ThorIPAddress?: any;\r\n    BuildVersion: string;\r\n    Archive?: any;\r\n}\r\n\r\nexport interface WUShowScheduledRequest {\r\n    Cluster: string;\r\n    EventName: string;\r\n    PushEventName: string;\r\n    PushEventText: string;\r\n    State: string;\r\n}\r\n\r\nexport interface WUShowScheduledResponse {\r\n}\r\n\r\nexport interface WUQuerySetQueryActionRequest {\r\n    Action: string;\r\n    QuerySetName: string;\r\n    Queries: any[];\r\n}\r\n\r\nexport interface Result {\r\n    QueryId: string;\r\n    Suspended: boolean;\r\n    Success: boolean;\r\n    Code?: any;\r\n    Message?: any;\r\n}\r\n\r\nexport interface Results2 {\r\n    Result: Result[];\r\n}\r\n\r\nexport interface WUQuerySetQueryActionResponse {\r\n    Action: string;\r\n    QuerySetName: string;\r\n    Results: Results2;\r\n}\r\n\r\nexport interface WUQuerySetAliasActionRequest {\r\n    Action: string;\r\n    QuerySetName: string;\r\n    Queries: any[];\r\n}\r\n\r\nexport interface AliasResult {\r\n    Name?: any;\r\n    Success: boolean;\r\n    Code?: any;\r\n    Message?: any;\r\n}\r\n\r\nexport interface AliasResults {\r\n    Result: AliasResult[];\r\n}\r\n\r\nexport interface WUQuerySetAliasActionResponse {\r\n    Action: string;\r\n    QuerySetName: string;\r\n    Results: AliasResults;\r\n}\r\n\r\nexport interface WUPublishWorkunitRequest {\r\n    Wuid: string;\r\n    Cluster: string;\r\n    JobName: string;\r\n    Activate: string;\r\n    NotifyCluster: boolean;\r\n    Wait: number;\r\n    NoReload: boolean;\r\n    UpdateWorkUnitName: boolean;\r\n    memoryLimit: string;\r\n    TimeLimit: string;\r\n    WarnTimeLimit: string;\r\n    Priority: string;\r\n    RemoteDali: string;\r\n    Comment: string;\r\n    DontCopyFiles: boolean;\r\n    SourceProcess: string;\r\n    AllowForeignFiles: boolean;\r\n    UpdateDfs: boolean;\r\n    UpdateSuperFiles: boolean;\r\n    UpdateCloneFrom: boolean;\r\n    AppendCluster: boolean;\r\n}\r\n\r\nexport interface WUPublishWorkunitResponse {\r\n    Wuid: string;\r\n    Result?: any;\r\n    QuerySet: string;\r\n    QueryName: string;\r\n    QueryId: string;\r\n    ReloadFailed: boolean;\r\n    Suspended?: any;\r\n    ErrorMessage?: any;\r\n}\r\n\r\nexport interface WUGetGraphRequest {\r\n    Wuid: string;\r\n    GraphName: string;\r\n    SubGraphId: string;\r\n}\r\n\r\nexport interface ECLGraphEx {\r\n    Name: string;\r\n    Label: string;\r\n    Type: string;\r\n    Graph: string;\r\n    Complete: boolean;\r\n}\r\n\r\nexport interface GraphsEx {\r\n    ECLGraphEx: ECLGraphEx[];\r\n}\r\n\r\nexport interface WUGetGraphResponse {\r\n    Graphs: GraphsEx;\r\n}\r\n\r\nexport interface WUResultRequest {\r\n    Wuid?: string;\r\n    Sequence?: number;\r\n    ResultName?: string;\r\n    LogicalName?: string;\r\n    Cluster?: string;\r\n    SuppressXmlSchema?: boolean;\r\n    BypassCachedResult?: boolean;\r\n    FilterBy?: any[];\r\n    Start: number;\r\n    Count: number;\r\n}\r\n\r\nexport interface XmlSchema {\r\n    \"@name\": string;\r\n    xml: string;\r\n}\r\n\r\nexport interface Result {\r\n    XmlSchema: XmlSchema;\r\n    \"@xmlSchema\": string;\r\n    Row: any[];\r\n}\r\n\r\nexport interface WUResultResponse {\r\n    Wuid: string;\r\n    Sequence: number;\r\n    LogicalName?: any;\r\n    Cluster?: any;\r\n    Name: string;\r\n    Start: number;\r\n    Requested: number;\r\n    Count: number;\r\n    Total: number;\r\n    Result: Result;\r\n}\r\n\r\nexport interface WUQueryGetGraphRequest {\r\n    Target: string;\r\n    QueryId: string;\r\n    GraphName: string;\r\n    SubGraphId: string;\r\n}\r\n\r\nexport interface WUQueryGetGraphResponse {\r\n}\r\n\r\nexport interface WUFileRequest {\r\n    Name: string;\r\n    Wuid: string;\r\n    Type: string;\r\n    Option: string;\r\n    SlaveIP: string;\r\n    IPAddress: string;\r\n    Description: string;\r\n    QuerySet: string;\r\n    Query: string;\r\n    Process: string;\r\n    ClusterGroup: string;\r\n    LogDate: string;\r\n    SlaveNumber: number;\r\n    SizeLimit: number;\r\n    PlainText: string;\r\n}\r\n\r\nexport interface WUGetStatsRequest {\r\n    WUID: string;\r\n    CreatorType: string;\r\n    Creator: string;\r\n    ScopeType: string;\r\n    Scope: string;\r\n    Kind: string;\r\n    Measure: string;\r\n    MinScopeDepth: number;\r\n    MaxScopeDepth: number;\r\n    IncludeGraphs: boolean;\r\n    CreateDescriptions: boolean;\r\n    MinValue: number;\r\n    MaxValue: number;\r\n    Filter: string;\r\n}\r\n\r\nexport interface WUStatisticItem {\r\n    Creator: string;\r\n    CreatorType: string;\r\n    Scope: string;\r\n    ScopeType: string;\r\n    TimeStamp: Date;\r\n    Measure: string;\r\n    Kind: string;\r\n    Value: any;\r\n    RawValue: any;\r\n    Wuid: string;\r\n    Max?: number;\r\n    Count?: number;\r\n    Description: string;\r\n}\r\n\r\nexport interface Statistics {\r\n    WUStatisticItem: WUStatisticItem[];\r\n}\r\n\r\nexport interface WUGetStatsResponse {\r\n    WUID: string;\r\n    Statistics: Statistics;\r\n}\r\n\r\nexport interface WUCDebugRequest {\r\n    Wuid: string;\r\n    Command: string;\r\n}\r\n\r\nexport interface WUCDebugResponse {\r\n    Result: string;\r\n}\r\n\r\nexport namespace WUDetails {\r\n    export interface AttributeFilter {\r\n        Name: string;\r\n        ExactValue: string;\r\n        MinValue: string;\r\n        MaxValue: string;\r\n    }\r\n\r\n    export interface Filter {\r\n        MaxDepth: number;\r\n        Scopes: string[];\r\n        Ids: string[];\r\n        ScopeTypes: string[];\r\n        AttributeFilters: AttributeFilter[];\r\n    }\r\n\r\n    export interface Nested {\r\n        Depth: number;\r\n        ScopeTypes: string[];\r\n    }\r\n\r\n    export interface ScopeOverride {\r\n        scopeType: string;\r\n        Attributes: string[];\r\n    }\r\n\r\n    export interface AttributeToReturn {\r\n        OnlyDynamic: boolean;\r\n        MinVersion: string;\r\n        Measure: string;\r\n        Attributes: string[];\r\n        ScopeOverrides: ScopeOverride[];\r\n    }\r\n\r\n    export interface ScopeOptions {\r\n        IncludeMatchedScopesInResults: boolean;\r\n        IncludeScope: boolean;\r\n        IncludeId: boolean;\r\n        IncludeScopeType: boolean;\r\n    }\r\n\r\n    export interface AttributeOptions {\r\n        IncludeName: boolean;\r\n        IncludeRawValue: boolean;\r\n        IncludeFormatted: boolean;\r\n        IncludeMeasure: boolean;\r\n        IncludeCreator: boolean;\r\n        IncludeCreatorType: boolean;\r\n    }\r\n\r\n    export interface Request {\r\n        WUID: string;\r\n        Filter?: Filter;\r\n        Nested?: Nested;\r\n        AttributeToReturn?: AttributeToReturn;\r\n        ScopeOptions?: ScopeOptions;\r\n        AttributeOptions?: AttributeOptions;\r\n    }\r\n\r\n    export interface Attribute {\r\n        Name: string;\r\n        RawValue?: any;\r\n        Formatted: any;\r\n        Measure?: any;\r\n        Creator?: any;\r\n        CreatorType?: any;\r\n    }\r\n\r\n    export interface Attributes {\r\n        Attribute: Attribute[];\r\n    }\r\n\r\n    export interface Scope {\r\n        Scope: string;\r\n        Id?: any;\r\n        ScopeType?: any;\r\n        Attributes: Attributes;\r\n    }\r\n\r\n    export interface Scopes {\r\n        Scope: Scope[];\r\n    }\r\n\r\n    export interface Response {\r\n        maxVersion: number;\r\n        WUID: string;\r\n        Scopes: Scopes;\r\n    }\r\n}\r\n\r\nexport class Service {\r\n    private _transport: ESPTransport;\r\n\r\n    constructor(transport: ITransport | string) {\r\n        if (typeof transport === \"string\") {\r\n            transport = createTransport(transport);\r\n        }\r\n        this._transport = new ESPTransport(transport, \"WsWorkunits\", \"1.67\");\r\n    }\r\n\r\n    WUQuery(request: WUQueryRequest = {}): Promise<WUQueryResponse> {\r\n        return this._transport.send(\"WUQuery\", request);\r\n    }\r\n\r\n    WUInfo(_request: WUInfoRequest): Promise<WUInfoResponse> {\r\n        const request: WUInfoRequest = {\r\n            Wuid: \"\",\r\n            TruncateEclTo64k: true,\r\n            IncludeExceptions: false,\r\n            IncludeGraphs: false,\r\n            IncludeSourceFiles: false,\r\n            IncludeResults: false,\r\n            IncludeResultsViewNames: false,\r\n            IncludeVariables: false,\r\n            IncludeTimers: false,\r\n            IncludeDebugValues: false,\r\n            IncludeApplicationValues: false,\r\n            IncludeWorkflows: false,\r\n            IncludeXmlSchemas: false,\r\n            IncludeResourceURLs: false,\r\n            SuppressResultSchemas: true,\r\n            ..._request\r\n        };\r\n        return this._transport.send(\"WUInfo\", request);\r\n    }\r\n\r\n    WUCreate(): Promise<WUCreateResponse> {\r\n        return this._transport.send(\"WUCreate\");\r\n    }\r\n\r\n    private objToESPArray(id: string, obj: Object, request: any) {\r\n        let count = 0;\r\n        for (const key in obj) {\r\n            if (obj.hasOwnProperty(key)) {\r\n                request[`${id}s.${id}.${count}.Name`] = key;\r\n                request[`${id}s.${id}.${count}.Value`] = obj[key];\r\n                ++count;\r\n            }\r\n        }\r\n        request[`${id}s.${id}.itemcount`] = count;\r\n    }\r\n\r\n    WUUpdate(request: WUUpdateRequest, appValues: { [key: string]: string | number | boolean } = {}, debugValues: { [key: string]: string | number | boolean } = {}): Promise<WUUpdateResponse> {\r\n        this.objToESPArray(\"ApplicationValue\", appValues, request);\r\n        this.objToESPArray(\"DebugValue\", debugValues, request);\r\n        return this._transport.send(\"WUUpdate\", request);\r\n    }\r\n\r\n    WUSubmit(request: WUSubmitRequest): Promise<WUSubmitResponse> {\r\n        return this._transport.send(\"WUSubmit\", request);\r\n    }\r\n\r\n    WUResubmit(request: WUResubmitRequest): Promise<WUResubmitResponse> {\r\n        this._transport.toESPStringArray(request, \"Wuids\");\r\n        return this._transport.send(\"WUResubmit\", request);\r\n    }\r\n\r\n    WUQueryDetails(request: WUQueryDetailsRequest): Promise<WUQueryDetailsResponse> {\r\n        return this._transport.send(\"WUQueryDetails\", request);\r\n    }\r\n\r\n    WUListQueries(request: WUListQueriesRequest): Promise<WUListQueriesResponse> {\r\n        return this._transport.send(\"WUListQueries\", request);\r\n    }\r\n\r\n    WUPushEvent(request: WUPushEventRequest): Promise<WUPushEventResponse> {\r\n        return this._transport.send(\"WUPushEvent\", request);\r\n    }\r\n\r\n    WUAction(request: WUActionRequest): Promise<WUActionResponse> {\r\n        this._transport.toESPStringArray(request, \"Wuids\");\r\n        (<any>request).ActionType = request.WUActionType; //  v5.x compatibility\r\n        return this._transport.send(\"WUAction\", request);\r\n    }\r\n\r\n    WUGetZAPInfo(request: WUGetZAPInfoRequest): Promise<WUGetZAPInfoResponse> {\r\n        return this._transport.send(\"WUGetZAPInfo\", request);\r\n    }\r\n\r\n    WUShowScheduled(request: WUShowScheduledRequest): Promise<WUShowScheduledResponse> {\r\n        return this._transport.send(\"WUShowScheduled\", request);\r\n    }\r\n\r\n    WUQuerySetAliasAction(request: WUQuerySetAliasActionRequest): Promise<WUQuerySetAliasActionResponse> {\r\n        return this._transport.send(\"WUQuerySetAliasAction\", request);\r\n    }\r\n\r\n    WUQuerySetQueryAction(request: WUQuerySetQueryActionRequest): Promise<WUQuerySetQueryActionResponse> {\r\n        return this._transport.send(\"WUQuerySetQueryAction\", request);\r\n    }\r\n\r\n    WUPublishWorkunit(request: WUPublishWorkunitRequest): Promise<WUPublishWorkunitResponse> {\r\n        return this._transport.send(\"WUPublishWorkunit\", request);\r\n    }\r\n\r\n    WUGetGraph(request: WUGetGraphRequest): Promise<WUGetGraphResponse> {\r\n        return this._transport.send(\"WUGetGraph\", request);\r\n    }\r\n\r\n    WUResult(request: WUResultRequest): Promise<WUResultResponse> {\r\n        return this._transport.send(\"WUResult\", request);\r\n    }\r\n\r\n    WUQueryGetGraph(request: WUQueryGetGraphRequest): Promise<WUQueryGetGraphResponse> {\r\n        return this._transport.send(\"WUQueryGetGraph\", request);\r\n    }\r\n\r\n    WUFile(request: WUFileRequest): Promise<string> {\r\n        return this._transport.send(\"WUFile\", request, \"text\");\r\n    }\r\n\r\n    WUGetStats(request: WUGetStatsRequest): Promise<WUGetStatsResponse> {\r\n        return this._transport.send(\"WUGetStats\", request);\r\n    }\r\n\r\n    WUDetails(request: WUDetails.Request): Promise<WUDetails.Response> {\r\n        return this._transport.send(\"WUDetails\", request);\r\n    }\r\n\r\n    WUCDebug(request: WUCDebugRequest): Promise<XMLNode> {\r\n        return this._transport.send(\"WUCDebug\", request).then((response) => {\r\n            const retVal = xml2json(response.Result);\r\n            if (retVal.children.length) {\r\n                return retVal.children[0];\r\n            }\r\n            return null;\r\n        });\r\n    }\r\n}\r\n","import { createTransport, ITransport } from \"../../comms/index\";\r\nimport { ESPTransport } from \"../comms/transport\";\r\n\r\nexport interface EclServerQueueRequest {\r\n    EclServerQueue?: string;\r\n}\r\n\r\nexport interface TpLogicalCluster {\r\n    Name: string;\r\n    Queue?: any;\r\n    LanguageVersion: string;\r\n    Process?: any;\r\n    Type: string;\r\n}\r\n\r\nexport interface TpLogicalClusters {\r\n    TpLogicalCluster: TpLogicalCluster[];\r\n}\r\n\r\nexport interface TpLogicalClusterQueryResponse {\r\n    default?: TpLogicalCluster;\r\n    TpLogicalClusters: TpLogicalClusters;\r\n}\r\n\r\nexport class Service {\r\n    private _transport: ESPTransport;\r\n\r\n    constructor(transport: ITransport | string) {\r\n        if (typeof transport === \"string\") {\r\n            transport = createTransport(transport);\r\n        }\r\n        this._transport = new ESPTransport(transport, \"WsTopology\", \"1.25\");\r\n    }\r\n\r\n    TpLogicalClusterQuery(request: EclServerQueueRequest = {}): Promise<TpLogicalClusterQueryResponse> {\r\n        return this._transport.send(\"WUUpdate\", request);\r\n    }\r\n\r\n    DefaultTpLogicalClusterQuery(request: EclServerQueueRequest = {}): Promise<TpLogicalCluster> {\r\n        return this.TpLogicalClusterQuery(request).then((response) => {\r\n            if (response.default) {\r\n                return response.default;\r\n            }\r\n            let firstHThor;\r\n            let first;\r\n            response.TpLogicalClusters.TpLogicalCluster.some((item, idx) => {\r\n                if (idx === 0) {\r\n                    first = item;\r\n                }\r\n                if (item.Type === \"hthor\") {\r\n                    firstHThor = item;\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n            return firstHThor || first;\r\n        });\r\n    }\r\n}\r\n","import { createTransport, ITransport } from \"../../comms/index\";\r\nimport { ESPTransport } from \"../comms/transport\";\r\n\r\nexport interface ActivityRequest {\r\n    ChatURL?: string;\r\n    BannerContent?: string;\r\n    BannerColor?: string;\r\n    BannerSize?: string;\r\n    BannerScroll?: string;\r\n    BannerAction?: string;\r\n    EnableChatURL?: boolean;\r\n    FromSubmitBtn?: boolean;\r\n    SortBy?: string;\r\n    Descending?: boolean;\r\n}\r\n\r\nexport interface TargetCluster {\r\n    ClusterName: string;\r\n    QueueName: string;\r\n    QueueStatus: string;\r\n    StatusDetails: string;\r\n    Warning?: any;\r\n    ClusterType: number;\r\n    ClusterSize: number;\r\n    ClusterStatus: number;\r\n}\r\n\r\nexport interface ThorClusterList {\r\n    TargetCluster: TargetCluster[];\r\n}\r\n\r\nexport interface TargetCluster2 {\r\n    ClusterName: string;\r\n    QueueName: string;\r\n    QueueStatus: string;\r\n    StatusDetails: string;\r\n    Warning?: any;\r\n    ClusterType: number;\r\n    ClusterSize: number;\r\n    ClusterStatus: number;\r\n}\r\n\r\nexport interface RoxieClusterList {\r\n    TargetCluster: TargetCluster2[];\r\n}\r\n\r\nexport interface TargetCluster3 {\r\n    ClusterName: string;\r\n    QueueName: string;\r\n    QueueStatus: string;\r\n    StatusDetails: string;\r\n    Warning?: any;\r\n    ClusterType: number;\r\n    ClusterSize: number;\r\n    ClusterStatus: number;\r\n}\r\n\r\nexport interface HThorClusterList {\r\n    TargetCluster: TargetCluster3[];\r\n}\r\n\r\nexport interface ActiveWorkunit {\r\n    Wuid: string;\r\n    State: string;\r\n    StateID: number;\r\n    Owner: string;\r\n    Jobname: string;\r\n    Server: string;\r\n    Instance: string;\r\n    Priority: string;\r\n    Extra?: any;\r\n    GraphName?: any;\r\n    Duration?: any;\r\n    GID?: any;\r\n    QueueName: string;\r\n    MemoryBlocked?: any;\r\n    IsPausing: boolean;\r\n    Warning?: any;\r\n    ClusterName: string;\r\n    ClusterType: string;\r\n    ClusterQueueName: string;\r\n    TargetClusterName: string;\r\n}\r\n\r\nexport interface Running {\r\n    ActiveWorkunit: ActiveWorkunit[];\r\n}\r\n\r\nexport interface ServerJobQueue {\r\n    QueueName: string;\r\n    ServerName: string;\r\n    ServerType: string;\r\n    QueueStatus: string;\r\n    StatusDetails: string;\r\n    NetworkAddress: string;\r\n    Port?: number;\r\n}\r\n\r\nexport interface ServerJobQueues {\r\n    ServerJobQueue: ServerJobQueue[];\r\n}\r\n\r\nexport interface ActivityResponse {\r\n    Build: string;\r\n    ThorClusterList: ThorClusterList;\r\n    RoxieClusterList: RoxieClusterList;\r\n    HThorClusterList: HThorClusterList;\r\n    Running: Running;\r\n    BannerContent: string;\r\n    BannerColor: string;\r\n    BannerSize: string;\r\n    BannerScroll: string;\r\n    ChatURL: string;\r\n    ShowBanner: number;\r\n    ShowChatURL: number;\r\n    SortBy?: any;\r\n    Descending: boolean;\r\n    SuperUser: boolean;\r\n    AccessRight: string;\r\n    ServerJobQueues: ServerJobQueues;\r\n}\r\n\r\nexport interface RootObject {\r\n    ActivityResponse: ActivityResponse;\r\n}\r\n\r\nexport class Service {\r\n    private _transport: ESPTransport;\r\n\r\n    constructor(transport: ITransport | string) {\r\n        if (typeof transport === \"string\") {\r\n            transport = createTransport(transport);\r\n        }\r\n        this._transport = new ESPTransport(transport, \"WsSMC\", \"1.19\");\r\n    }\r\n\r\n    Activity(request: ActivityRequest): Promise<ActivityResponse> {\r\n        return this._transport.send(\"Activity\", request);\r\n    }\r\n}\r\n","import { createTransport, ITransport } from \"../../comms/index\";\r\nimport { ESPTransport } from \"../comms/transport\";\r\n\r\nexport interface DFULogicalFile {\r\n    Prefix: string;\r\n    NodeGroup: string;\r\n    Directory: string;\r\n    Description?: any;\r\n    Parts: string;\r\n    Name: string;\r\n    Owner: string;\r\n    Totalsize: string;\r\n    RecordCount: string;\r\n    Modified: string;\r\n    LongSize?: any;\r\n    LongRecordCount?: any;\r\n    isSuperfile: boolean;\r\n    isDirectory: boolean;\r\n    Replicate: boolean;\r\n    IntSize: number;\r\n    IntRecordCount: number;\r\n    FromRoxieCluster?: any;\r\n    BrowseData: boolean;\r\n    IsCompressed: boolean;\r\n    ContentType: string;\r\n    CompressedFileSize?: any;\r\n    SuperOwners?: any;\r\n    Persistent: boolean;\r\n    IsProtected: boolean;\r\n}\r\n\r\nexport interface DFULogicalFiles {\r\n    DFULogicalFile: DFULogicalFile[];\r\n}\r\n\r\nexport interface DFUQueryResponse {\r\n    DFULogicalFiles: DFULogicalFiles;\r\n    Prefix?: any;\r\n    NodeGroup?: any;\r\n    LogicalName?: any;\r\n    Description?: any;\r\n    Owner?: any;\r\n    StartDate?: any;\r\n    EndDate?: any;\r\n    FileType?: any;\r\n    FileSizeFrom: number;\r\n    FileSizeTo: number;\r\n    FirstN: number;\r\n    PageSize: number;\r\n    PageStartFrom: number;\r\n    LastPageFrom: number;\r\n    PageEndAt: number;\r\n    PrevPageFrom: number;\r\n    NextPageFrom: number;\r\n    NumFiles: number;\r\n    Sortby?: any;\r\n    Descending: boolean;\r\n    BasicQuery: string;\r\n    ParametersForPaging: string;\r\n    Filters: string;\r\n    CacheHint: number;\r\n    IsSubsetOfFiles?: any;\r\n    Warning?: any;\r\n}\r\n\r\nexport interface RootObject {\r\n    DFUQueryResponse: DFUQueryResponse;\r\n}\r\n\r\nexport class Service {\r\n    private _transport: ESPTransport;\r\n\r\n    constructor(transport: ITransport | string) {\r\n        if (typeof transport === \"string\") {\r\n            transport = createTransport(transport);\r\n        }\r\n        this._transport = new ESPTransport(transport, \"WsDFU\", \"1.35\");\r\n    }\r\n}\r\n","//  Ported to TypeScript from:  https://github.com/bevacqua/hash-sum\r\n\r\nfunction pad(hash: string, len: number): string {\r\n    while (hash.length < len) {\r\n        hash = \"0\" + hash;\r\n    }\r\n    return hash;\r\n}\r\n\r\nfunction fold(hash: number, text: string): number {\r\n    if (text.length === 0) {\r\n        return hash;\r\n    }\r\n    for (let i = 0; i < text.length; ++i) {\r\n        const chr = text.charCodeAt(i);\r\n        // tslint:disable:no-bitwise\r\n        hash = ((hash << 5) - hash) + chr;\r\n        hash |= 0;\r\n        // tslint:enable:no-bitwise\r\n    }\r\n    return hash < 0 ? hash * -2 : hash;\r\n}\r\n\r\nfunction foldObject(hash: number, o: object, seen: any[]) {\r\n    return Object.keys(o).sort().reduce((input: any, key: string) => {\r\n        return foldValue(input, o[key], key, seen);\r\n    }, hash);\r\n}\r\n\r\nfunction foldValue(input: number, value: any, key: string, seen: any[]) {\r\n    const hash = fold(fold(fold(input, key), toString(value)), typeof value);\r\n    if (value === null) {\r\n        return fold(hash, \"null\");\r\n    }\r\n    if (value === undefined) {\r\n        return fold(hash, \"undefined\");\r\n    }\r\n    if (typeof value === \"object\") {\r\n        if (seen.indexOf(value) !== -1) {\r\n            return fold(hash, \"[Circular]\" + key);\r\n        }\r\n        seen.push(value);\r\n        return foldObject(hash, value, seen);\r\n    }\r\n    return fold(hash, value.toString());\r\n}\r\n\r\nfunction toString(o: object): string {\r\n    return Object.prototype.toString.call(o);\r\n}\r\n\r\nexport function hashSum(o: any): string {\r\n    return pad(foldValue(0, o, \"\", []).toString(16), 8);\r\n}\r\n","/**\r\n * inner - return inner property of Object\r\n * Usage:  inner(\"some.prop.to.locate\", obj);\r\n *\r\n * @param prop - property to locate\r\n * @param obj - object to locate property in\r\n */\r\nexport function inner(prop: string, obj: any): any {\r\n    if (prop === void 0 || obj === void 0) return void 0;\r\n    for (const item of prop.split(\".\")) {\r\n        if (!obj.hasOwnProperty(item)) {\r\n            return undefined;\r\n        }\r\n        obj = obj[item];\r\n    }\r\n    return obj;\r\n}\r\n\r\n/**\r\n * exists - return inner property of Object\r\n * Usage:  inner(\"some.prop.to.locate\", obj);\r\n *\r\n * @param prop - property to locate\r\n * @param obj - object to locate property in\r\n */\r\nexport function exists(prop: string, obj: Object): boolean {\r\n    return inner(prop, obj) !== undefined;\r\n};\r\n","/**\r\n * IObserverHandle - Reference to an observing instance\r\n */\r\nexport interface IObserverHandle {\r\n    release();\r\n    unwatch();\r\n}\r\n\r\nclass ObserverHandle<T extends string> implements IObserverHandle {\r\n    private eventTarget: Observable<T>;\r\n    private eventID: T;\r\n    private callback: Function;\r\n\r\n    constructor(eventTarget: Observable<T>, eventID: T, callback: Function) {\r\n        this.eventTarget = eventTarget;\r\n        this.eventID = eventID;\r\n        this.callback = callback;\r\n    }\r\n\r\n    release() {\r\n        this.eventTarget.removeObserver(this.eventID, this.callback);\r\n    }\r\n\r\n    unwatch() {\r\n        this.release();\r\n    }\r\n}\r\n\r\nexport type EventID = string;\r\nexport class Observable<T extends EventID> {\r\n    private _knownEvents: EventID[];\r\n    private _eventObservers: { [eventID: string]: Function[] } = {};\r\n\r\n    constructor(...events: T[]) {\r\n        this._knownEvents = events;\r\n    }\r\n\r\n    addObserver(eventID: T, callback: Function): IObserverHandle {\r\n        let eventObservers = this._eventObservers[eventID];\r\n        if (!eventObservers) {\r\n            eventObservers = [];\r\n            this._eventObservers[eventID] = eventObservers;\r\n        }\r\n        eventObservers.push(callback);\r\n        return new ObserverHandle<T>(this, eventID, callback);\r\n    }\r\n\r\n    removeObserver(eventID: T, callback: Function): this {\r\n        const eventObservers = this._eventObservers[eventID];\r\n        if (eventObservers) {\r\n            for (let i = eventObservers.length - 1; i >= 0; --i) {\r\n                if (eventObservers[i] === callback) {\r\n                    eventObservers.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    dispatchEvent(eventID: T, ...args: any[]): this {\r\n        const eventObservers = this._eventObservers[eventID];\r\n        if (eventObservers) {\r\n            for (const observer of eventObservers) {\r\n                observer(...args);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    private _hasObserver(eventID: string): boolean {\r\n        const eventObservers = this._eventObservers[eventID];\r\n        for (const observer in eventObservers) {\r\n            if (eventObservers[observer]) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    hasObserver(_eventID?: T): boolean {\r\n        if (_eventID !== void 0) {\r\n            return this._hasObserver(_eventID);\r\n        }\r\n        for (const eventID in this._eventObservers) {\r\n            if (this._hasObserver(eventID)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","import { hashSum } from \"../util/hashSum\";\r\nimport { exists, inner } from \"../util/object\";\r\nimport { Observable } from \"../util/observer\";\r\n\r\nexport interface IEvent {\r\n    id: string;\r\n    oldValue: any;\r\n    newValue: any;\r\n}\r\n\r\nexport type StatePropCallback = (changes: IEvent) => void;\r\nexport type StateCallback = (changes: IEvent[]) => void;\r\nexport type StateEvents = \"propChanged\" | \"changed\";\r\nexport class StateObject<U, I> {\r\n    private _espState: U = <U>{};\r\n    private _espStateCache: { [key: string]: string } = {};\r\n    private _events = new Observable<StateEvents>();\r\n\r\n    protected clear(newVals?: Partial<I>) {\r\n        this._espState = <U>{};\r\n        this._espStateCache = {};\r\n        if (newVals !== void 0) {\r\n            this.set(<I>newVals);\r\n        }\r\n    }\r\n\r\n    protected get(): U;\r\n    protected get<K extends keyof U>(key: K, defValue?: U[K]): U[K];\r\n    protected get<K extends keyof U>(key?: K, defValue?: U[K]): U | U[K] {\r\n        if (key === void 0) {\r\n            return this._espState;\r\n        }\r\n        return this.has(key) ? this._espState[key] : defValue;\r\n    }\r\n    protected innerXXX(qualifiedID: string, defValue?: any) {\r\n        return exists(qualifiedID, this._espState) ? inner(qualifiedID, this._espState) : defValue;\r\n    }\r\n\r\n    protected set(newVals: I): IEvent[];\r\n    protected set<K extends keyof U>(key: K, newVal: U[K], batchMode?: boolean): IEvent;\r\n    protected set<K extends keyof U>(keyOrNewVals: K | U, newVal?: U[K], batchMode: boolean = false): IEvent[] | IEvent {\r\n        if (typeof keyOrNewVals === \"string\") {\r\n            return this.setSingle(keyOrNewVals, newVal, batchMode);\r\n        }\r\n        return this.setAll(<Partial<U>>keyOrNewVals);\r\n    }\r\n\r\n    private setSingle<K extends keyof U>(key: K, newVal: U[K], batchMode: boolean): IEvent {\r\n        const oldCacheVal = this._espStateCache[(<string>key)];\r\n        const newCacheVal = hashSum(newVal);\r\n        if (oldCacheVal !== newCacheVal) {\r\n            this._espStateCache[key] = newCacheVal;\r\n            const oldVal = this._espState[key];\r\n            this._espState[key] = newVal;\r\n            const changedInfo: IEvent = { id: key, oldValue: oldVal, newValue: newVal };\r\n            if (!batchMode) {\r\n                this._events.dispatchEvent(\"propChanged\", changedInfo);\r\n                this._events.dispatchEvent(\"changed\", [changedInfo]);\r\n            }\r\n            return changedInfo;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private setAll(_: Partial<U>): IEvent[] {\r\n        const changed: IEvent[] = [];\r\n        for (const key in _) {\r\n            if (_.hasOwnProperty(key)) {\r\n                const changedInfo: IEvent = this.setSingle(key, _[key], true);\r\n                if (changedInfo) {\r\n                    changed.push(changedInfo);\r\n                }\r\n            }\r\n        }\r\n        if (changed.length) {\r\n            for (const changeInfo of changed) {\r\n                this._events.dispatchEvent((\"propChanged\"), changeInfo);\r\n            }\r\n            this._events.dispatchEvent((\"changed\"), changed);\r\n        }\r\n        return changed;\r\n    }\r\n\r\n    protected has<K extends keyof U>(key: K): boolean {\r\n        return this._espState[key] !== void 0;\r\n    }\r\n\r\n    on(eventID: StateEvents, callback: StateCallback);\r\n    on(eventID: StateEvents, propID: keyof U, callback: StatePropCallback);\r\n    on(eventID: StateEvents, propIDOrCallback: StateCallback | keyof U, callback?: StatePropCallback) {\r\n        if (this.isCallback(propIDOrCallback)) {\r\n            switch (eventID) {\r\n                case \"changed\":\r\n                    return this._events.addObserver(eventID, propIDOrCallback);\r\n                default:\r\n            }\r\n        } else {\r\n            switch (eventID) {\r\n                case \"propChanged\":\r\n                    return this._events.addObserver(eventID, (changeInfo: IEvent) => {\r\n                        if (changeInfo.id === propIDOrCallback) {\r\n                            callback(changeInfo);\r\n                        }\r\n                    });\r\n                default:\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    protected isCallback(propIDOrCallback: StateCallback | keyof U): propIDOrCallback is StateCallback {\r\n        return (typeof propIDOrCallback === \"function\");\r\n    }\r\n\r\n    protected hasEventListener(): boolean {\r\n        return this._events.hasObserver();\r\n    }\r\n}\r\n\r\nexport class Cache<I, C> {\r\n    private _cache: { [id: string]: C } = {};\r\n    private _calcID: (espObj: I | C) => string;\r\n\r\n    static hash(...args) {\r\n        return hashSum({ ...args });\r\n    }\r\n\r\n    constructor(calcID: (espObj: I | C) => string) {\r\n        this._calcID = calcID;\r\n    }\r\n\r\n    has(espObj: I): boolean {\r\n        return this._calcID(espObj) in this._cache;\r\n    }\r\n\r\n    set(obj: C): C {\r\n        this._cache[this._calcID(obj)] = obj;\r\n        return obj;\r\n    }\r\n\r\n    get(espObj: I, factory: () => C): C {\r\n        const retVal = this._cache[this._calcID(espObj)];\r\n        if (!retVal) {\r\n            return this.set(factory());\r\n        }\r\n        return retVal;\r\n    }\r\n}\r\n","//  TODO switch to propper logger  ---\r\n\r\nexport enum Level {\r\n    debug,\r\n    info,\r\n    notice,\r\n    warning,\r\n    error,\r\n    critical,\r\n    alert,\r\n    emergency\r\n}\r\n\r\nexport class Logging {\r\n    log(level: Level, msg: string) {\r\n        const d = new Date();\r\n        const n = d.toISOString();\r\n        // tslint:disable-next-line:no-console\r\n        console.log(`${n} <${Level[level]}>:  ${msg}`);\r\n    }\r\n\r\n    debug(msg: string) {\r\n        this.log(Level.debug, msg);\r\n    }\r\n\r\n    info(msg: string) {\r\n        this.log(Level.info, msg);\r\n    }\r\n\r\n    notice(msg: string) {\r\n        this.log(Level.notice, msg);\r\n    }\r\n\r\n    warning(msg: string) {\r\n        this.log(Level.warning, msg);\r\n    }\r\n\r\n    error(msg: string) {\r\n        this.log(Level.error, msg);\r\n    }\r\n\r\n    critical(msg: string) {\r\n        this.log(Level.critical, msg);\r\n    }\r\n\r\n    alert(msg: string) {\r\n        this.log(Level.alert, msg);\r\n    }\r\n\r\n    emergency(msg: string) {\r\n        this.log(Level.emergency, msg);\r\n    }\r\n}\r\n\r\nexport let logger = new Logging();\r\n","import { Cache, StateObject } from \"../../collections/stateful\";\r\nimport { PrimativeValueMap, XMLNode } from \"../../util/SAXParser\";\r\nimport { ECLGraph, Service } from \"../services/WsWorkunits\";\r\nimport { Timer } from \"./Timer\";\r\n\r\nexport interface ECLGraphEx extends ECLGraph {\r\n    Wuid: string;\r\n    Time: number;\r\n}\r\nexport class Graph extends StateObject<ECLGraphEx, ECLGraphEx> implements ECLGraphEx {\r\n    protected connection: Service;\r\n\r\n    get properties(): ECLGraphEx { return this.get(); }\r\n    get Wuid(): string { return this.get(\"Wuid\"); }\r\n    get Name(): string { return this.get(\"Name\"); }\r\n    get Label(): string { return this.get(\"Label\"); }\r\n    get Type(): string { return this.get(\"Type\"); }\r\n    get Complete(): boolean { return this.get(\"Complete\"); }\r\n    get WhenStarted(): Date { return this.get(\"WhenStarted\"); }\r\n    get WhenFinished(): Date { return this.get(\"WhenFinished\"); }\r\n    get Time(): number { return this.get(\"Time\"); }\r\n\r\n    constructor(connection: Service | string, wuid: string, eclGraph: ECLGraph, eclTimers: Timer[]) {\r\n        super();\r\n        if (connection instanceof Service) {\r\n            this.connection = connection;\r\n        } else {\r\n            this.connection = new Service(connection);\r\n        }\r\n        let duration = 0;\r\n        for (const eclTimer of eclTimers) {\r\n            if (eclTimer.GraphName === eclGraph.Name && !eclTimer.HasSubGraphId) {\r\n                duration = Math.round(eclTimer.Seconds * 1000) / 1000;\r\n                break;\r\n            }\r\n        }\r\n        this.set({ Wuid: wuid, Time: duration, ...eclGraph });\r\n    }\r\n}\r\n\r\nexport class GraphCache extends Cache<ECLGraph, Graph> {\r\n    constructor() {\r\n        super((obj) => {\r\n            return Cache.hash([obj.Name]);\r\n        });\r\n    }\r\n}\r\n\r\n//  XGMML Graph ---\r\n\r\nconst ATTR_DEFINITION = \"definition\";\r\n\r\nexport interface IECLDefintion {\r\n    id: string;\r\n    file: string;\r\n    line: number;\r\n    column: number;\r\n}\r\n\r\nexport class GraphItem {\r\n    parent: Subgraph;\r\n    id: string;\r\n    attrs: PrimativeValueMap;\r\n    constructor(parent: Subgraph, id: string, attrs: PrimativeValueMap) {\r\n        this.parent = parent;\r\n        this.id = id;\r\n        this.attrs = attrs;\r\n    }\r\n\r\n    className(): \"XGMMLGraph\" | \"Subgraph\" | \"Vertex\" | \"Edge\" {\r\n        return (<any>this.constructor).name;\r\n    }\r\n\r\n    hasECLDefinition(): boolean {\r\n        return this.attrs[ATTR_DEFINITION] !== undefined;\r\n    }\r\n\r\n    getECLDefinition(): IECLDefintion {\r\n        const match = /([a-z]:\\\\(?:[-\\w\\.\\d]+\\\\)*(?:[-\\w\\.\\d]+)?|(?:\\/[\\w\\.\\-]+)+)\\((\\d*),(\\d*)\\)/.exec(this.attrs[ATTR_DEFINITION]);\r\n        if (match) {\r\n            const [, _file, _row, _col] = match;\r\n            _file.replace(\"/./\", \"/\");\r\n            return {\r\n                id: this.id,\r\n                file: _file,\r\n                line: +_row,\r\n                column: +_col\r\n            };\r\n        }\r\n        throw `Bad definition:  ${this.attrs[ATTR_DEFINITION]}`;\r\n    }\r\n}\r\n\r\nexport class Subgraph extends GraphItem {\r\n    subgraphs: Subgraph[] = [];\r\n    subgraphsMap: { [key: string]: Subgraph } = {};\r\n    vertices: Vertex[] = [];\r\n    verticesMap: { [key: string]: Vertex } = {};\r\n    edges: Edge[] = [];\r\n    edgesMap: { [key: string]: Edge } = {};\r\n\r\n    constructor(parent: Subgraph, id: string, attrs: PrimativeValueMap) {\r\n        super(parent, id, attrs);\r\n        if (parent) {  //  Only needed for root node\r\n            parent.addSubgraph(this);\r\n        }\r\n    }\r\n\r\n    addSubgraph(subgraph: Subgraph) {\r\n        if (this.subgraphsMap[subgraph.id] !== undefined) {\r\n            throw \"Subgraph already exists\";\r\n        }\r\n        this.subgraphsMap[subgraph.id] = subgraph;\r\n        this.subgraphs.push(subgraph);\r\n    }\r\n\r\n    addVertex(vertex: Vertex) {\r\n        if (this.verticesMap[vertex.id] !== undefined) {\r\n            throw \"Vertex already exists\";\r\n        }\r\n        this.verticesMap[vertex.id] = vertex;\r\n        this.vertices.push(vertex);\r\n    }\r\n\r\n    addEdge(edge: Edge) {\r\n        if (this.edgesMap[edge.id] !== undefined) {\r\n            throw \"Edge already exists\";\r\n        }\r\n        this.edgesMap[edge.id] = edge;\r\n        this.edges.push(edge);\r\n    }\r\n\r\n    getNearestDefinition(backwards: boolean = true): IECLDefintion {\r\n        if (this.hasECLDefinition()) {\r\n            return this.getECLDefinition();\r\n        }\r\n        if (backwards) {\r\n            for (let i = this.vertices.length - 1; i >= 0; --i) {\r\n                const vertex = this.vertices[i];\r\n                if (vertex.hasECLDefinition()) {\r\n                    return vertex.getECLDefinition();\r\n                }\r\n            }\r\n        }\r\n        let retVal: IECLDefintion;\r\n        this.vertices.some((vertex) => {\r\n            retVal = vertex.getNearestDefinition();\r\n            if (retVal) {\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return retVal;\r\n    }\r\n}\r\n\r\nexport class Vertex extends GraphItem {\r\n    label: string;\r\n    inEdges: Edge[] = [];\r\n    outEdges: Edge[] = [];\r\n\r\n    constructor(parent: Subgraph, id: string, label: string, attrs: PrimativeValueMap) {\r\n        super(parent, id, attrs);\r\n        this.label = label;\r\n        parent.addVertex(this);\r\n    }\r\n\r\n    getNearestDefinition(): IECLDefintion {\r\n        if (this.hasECLDefinition()) {\r\n            return this.getECLDefinition();\r\n        }\r\n        let retVal: IECLDefintion;\r\n        this.inEdges.some((edge) => {\r\n            retVal = edge.getNearestDefinition();\r\n            if (retVal) {\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return retVal;\r\n    }\r\n}\r\n\r\nexport class XGMMLGraph extends Subgraph {\r\n    allSubgraphs: { [key: string]: Subgraph } = {};\r\n    allVertices: { [key: string]: Vertex } = {};\r\n    allEdges: { [key: string]: Edge } = {};\r\n\r\n    constructor(id: string) {\r\n        super(null, id, {});\r\n    }\r\n\r\n    breakpointLocations(path?): IECLDefintion[] {\r\n        const retVal: IECLDefintion[] = [];\r\n        for (const key in this.allVertices) {\r\n            if (this.allVertices.hasOwnProperty(key)) {\r\n                const vertex = this.allVertices[key];\r\n                if (vertex.hasECLDefinition()) {\r\n                    const definition = vertex.getECLDefinition();\r\n                    if (definition && !path || path === definition.file) {\r\n                        retVal.push(definition);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return retVal.sort((l, r) => {\r\n            return l.line - r.line;\r\n        });\r\n    }\r\n}\r\n\r\nexport class Edge extends Subgraph {\r\n    sourceID: string;\r\n    source: Vertex;\r\n    targetID: string;\r\n    target: Vertex;\r\n\r\n    constructor(parent: Subgraph, id: string, sourceID: string, targetID: string, attrs: PrimativeValueMap) {\r\n        super(parent, id, attrs);\r\n        this.sourceID = sourceID;\r\n        this.targetID = targetID;\r\n        parent.addEdge(this);\r\n    }\r\n\r\n    getNearestDefinition(): IECLDefintion {\r\n        if (this.hasECLDefinition()) {\r\n            return this.getECLDefinition();\r\n        }\r\n        return this.source.getNearestDefinition();\r\n    }\r\n}\r\n\r\ntype Callback = (tag: string, attributes: PrimativeValueMap, children: XMLNode[], _stack) => void;\r\nfunction walkXmlJson(node: XMLNode, callback: Callback, stack?: XMLNode[]) {\r\n    stack = stack || [];\r\n    stack.push(node);\r\n    callback(node.name, node.attributes, node.children, stack);\r\n    node.children.forEach((childNode) => {\r\n        walkXmlJson(childNode, callback, stack);\r\n    });\r\n    stack.pop();\r\n}\r\n\r\nfunction flattenAtt(nodes: XMLNode[]): PrimativeValueMap {\r\n    const retVal: PrimativeValueMap = {};\r\n    nodes.forEach((node: XMLNode) => {\r\n        if (node.name === \"att\") {\r\n            retVal[node.attributes[\"name\"]] = node.attributes[\"value\"];\r\n        }\r\n    });\r\n    return retVal;\r\n}\r\n\r\nexport function createXGMMLGraph(id, graphs: XMLNode): XGMMLGraph {\r\n    const graph = new XGMMLGraph(id);\r\n    const stack: Subgraph[] = [graph];\r\n    walkXmlJson(graphs, (tag: string, attributes: PrimativeValueMap, children: XMLNode[], _stack) => {\r\n        const top = stack[stack.length - 1];\r\n        switch (tag) {\r\n            case \"graph\":\r\n                break;\r\n            case \"node\":\r\n                if (children.length && children[0].children.length && children[0].children[0].name === \"graph\") {\r\n                    const subgraph = new Subgraph(top, `graph${attributes[\"id\"]}`, flattenAtt(children));\r\n                    graph.allSubgraphs[subgraph.id] = subgraph;\r\n                    stack.push(subgraph);\r\n                } else {\r\n                    const vertex = new Vertex(top, attributes[\"id\"], attributes[\"label\"], flattenAtt(children));\r\n                    graph.allVertices[vertex.id] = vertex;\r\n                }\r\n                break;\r\n            case \"edge\":\r\n                const edge = new Edge(top, attributes[\"id\"], attributes[\"source\"], attributes[\"target\"], flattenAtt(children));\r\n                graph.allEdges[edge.id] = edge;\r\n                break;\r\n            default:\r\n        }\r\n    });\r\n    for (const key in graph.allEdges) {\r\n        if (graph.allEdges.hasOwnProperty(key)) {\r\n            const edge = graph.allEdges[key];\r\n            try {\r\n                edge.source = graph.allVertices[edge.sourceID];\r\n                edge.target = graph.allVertices[edge.targetID];\r\n                edge.source.outEdges.push(edge);\r\n                edge.target.inEdges.push(edge);\r\n            } catch (e) { }\r\n        }\r\n    }\r\n    return graph;\r\n}\r\n","import { StateObject } from \"../../collections/stateful\";\r\nimport { Service } from \"../services/WsWorkunits\";\r\n\r\nexport interface ResourceEx {\r\n    Wuid: string;\r\n    URL: string;\r\n    DisplayName: string;\r\n    DisplayPath: string;\r\n}\r\n\r\nexport class Resource extends StateObject<ResourceEx, ResourceEx> implements ResourceEx {\r\n    protected connection: Service;\r\n\r\n    get properties(): ResourceEx { return this.get(); }\r\n    get Wuid(): string { return this.get(\"Wuid\"); }\r\n    get URL(): string { return this.get(\"URL\"); }\r\n    get DisplayName(): string { return this.get(\"DisplayName\"); }\r\n    get DisplayPath(): string { return this.get(\"DisplayPath\"); }\r\n\r\n    constructor(connection: Service | string, wuid: string, url: string) {\r\n        super();\r\n        if (connection instanceof Service) {\r\n            this.connection = connection;\r\n        } else {\r\n            this.connection = new Service(connection);\r\n        }\r\n\r\n        const cleanedURL = url.split(\"\\\\\").join(\"/\");\r\n        const urlParts = cleanedURL.split(\"/\");\r\n        const matchStr = \"res/\" + wuid + \"/\";\r\n        let displayPath = \"\";\r\n        let displayName = \"\";\r\n\r\n        if (cleanedURL.indexOf(matchStr) === 0) {\r\n            displayPath = cleanedURL.substr(matchStr.length);\r\n            displayName = urlParts[urlParts.length - 1];\r\n        }\r\n\r\n        this.set({\r\n            Wuid: wuid,\r\n            URL: url,\r\n            DisplayName: displayName,\r\n            DisplayPath: displayPath\r\n        });\r\n    }\r\n}\r\n","import { Cache, StateObject } from \"../../collections/stateful\";\r\nimport { exists } from \"../../util/object\";\r\nimport { parseXSD, XSDSchema } from \"../../util/SAXParser\";\r\nimport { DFULogicalFile } from \"../services/WsDFU\";\r\nimport { ECLResult, ECLSchemas, Service, WUResultRequest, WUResultResponse } from \"../services/WsWorkunits\";\r\n\r\nexport interface ECLResultEx extends ECLResult {\r\n    Wuid: string;\r\n    ResultViews: any[];\r\n}\r\nexport class Result extends StateObject<ECLResultEx & DFULogicalFile, ECLResultEx | DFULogicalFile> implements ECLResultEx {\r\n    protected connection: Service;\r\n    protected xsdSchema: XSDSchema;\r\n\r\n    get properties(): ECLResult { return this.get(); }\r\n    get Wuid(): string { return this.get(\"Wuid\"); }\r\n    get Name(): string { return this.get(\"Name\"); }\r\n    get Sequence(): number { return this.get(\"Sequence\"); }\r\n    get Value(): string { return this.get(\"Value\"); }\r\n    get Link(): string { return this.get(\"Link\"); }\r\n    get FileName(): string { return this.get(\"FileName\"); }\r\n    get IsSupplied(): boolean { return this.get(\"IsSupplied\"); }\r\n    get ShowFileContent() { return this.get(\"ShowFileContent\"); }\r\n    get Total(): number { return this.get(\"Total\"); }\r\n    get ECLSchemas(): ECLSchemas { return this.get(\"ECLSchemas\"); }\r\n    get NodeGroup(): string { return this.get(\"NodeGroup\"); }\r\n    get ResultViews(): any[] { return this.get(\"ResultViews\"); }\r\n\r\n    constructor(connection: Service | string, wuid: string, eclResult: ECLResult, resultViews: any[]) {\r\n        super();\r\n        if (connection instanceof Service) {\r\n            this.connection = connection;\r\n        } else {\r\n            this.connection = new Service(connection);\r\n        }\r\n        this.set({\r\n            Wuid: wuid,\r\n            ResultViews: resultViews,\r\n            ...eclResult\r\n        });\r\n    }\r\n\r\n    isComplete() {\r\n        return this.Total !== -1;\r\n    }\r\n\r\n    fetchXMLSchema(): Promise<XSDSchema> {\r\n        if (this.xsdSchema) {\r\n            return Promise.resolve(this.xsdSchema);\r\n        }\r\n        return this.WUResult().then((response) => {\r\n            if (exists(\"Result.XmlSchema.xml\", response)) {\r\n                this.xsdSchema = parseXSD(response.Result.XmlSchema.xml);\r\n                return this.xsdSchema;\r\n            }\r\n            return this;\r\n        });\r\n    }\r\n\r\n    fetchResult(): Promise<any[]> {\r\n        return this.WUResult(0, -1, true).then((response) => {\r\n            if (exists(\"Result.Row\", response)) {\r\n                return response.Result.Row;\r\n            }\r\n            return [];\r\n        });\r\n    }\r\n\r\n    protected WUResult(start: number = 0, count: number = 1, suppressXmlSchema: boolean = false): Promise<WUResultResponse> {\r\n        const request: WUResultRequest = <WUResultRequest>{};\r\n        if (this.Wuid && this.Sequence !== undefined) {\r\n            request.Wuid = this.Wuid;\r\n            request.Sequence = this.Sequence;\r\n        } else if (this.Name && this.NodeGroup) {\r\n            request.LogicalName = this.Name;\r\n            request.Cluster = this.NodeGroup;\r\n        } else if (this.Name) {\r\n            request.LogicalName = this.Name;\r\n        }\r\n        request.Start = start;\r\n        request.Count = count;\r\n        request.SuppressXmlSchema = suppressXmlSchema;\r\n        return this.connection.WUResult(request).then((response) => {\r\n            return response;\r\n        });\r\n    }\r\n}\r\n\r\nexport class ResultCache extends Cache<ECLResult, Result> {\r\n    constructor() {\r\n        super((obj) => {\r\n            return Cache.hash([obj.Sequence, obj.Name, obj.FileName]);\r\n        });\r\n    }\r\n}\r\n","import { StateObject } from \"../../collections/stateful\";\r\nimport { ECLSourceFile, Service, } from \"../services/WsWorkunits\";\r\n\r\nexport interface ECLSourceFileEx extends ECLSourceFile {\r\n    Wuid: string;\r\n}\r\n\r\nexport class SourceFile extends StateObject<ECLSourceFileEx, ECLSourceFileEx> implements ECLSourceFileEx {\r\n    protected connection: Service;\r\n\r\n    get properties(): ECLSourceFile { return this.get(); }\r\n    get Wuid(): string { return this.get(\"Wuid\"); }\r\n    get FileCluster(): string { return this.get(\"FileCluster\"); }\r\n    get Name(): string { return this.get(\"Name\"); }\r\n    get Count(): number { return this.get(\"Count\"); }\r\n\r\n    constructor(connection: Service | string, wuid: string, eclSourceFile: ECLSourceFile) {\r\n        super();\r\n        if (connection instanceof Service) {\r\n            this.connection = connection;\r\n        } else {\r\n            this.connection = new Service(connection);\r\n        }\r\n\r\n        this.set({\r\n            Wuid: wuid,\r\n            ...eclSourceFile\r\n        });\r\n    }\r\n}\r\n","export function espTime2Seconds(duration) {\r\n    if (!duration) {\r\n        return 0;\r\n    } else if (!isNaN(duration)) {\r\n        return parseFloat(duration);\r\n    }\r\n    //  GH:  <n>ns or <m>ms or <s>s or [<d> days ][<h>:][<m>:]<s>[.<ms>]\r\n    const nsIndex = duration.indexOf(\"ns\");\r\n    if (nsIndex !== -1) {\r\n        return parseFloat(duration.substr(0, nsIndex)) / 1000000000;\r\n    }\r\n    const msIndex = duration.indexOf(\"ms\");\r\n    if (msIndex !== -1) {\r\n        return parseFloat(duration.substr(0, msIndex)) / 1000;\r\n    }\r\n    const sIndex = duration.indexOf(\"s\");\r\n    if (sIndex !== -1 && duration.indexOf(\"days\") === -1) {\r\n        return parseFloat(duration.substr(0, sIndex));\r\n    }\r\n\r\n    const dayTimeParts = duration.split(\" days \");\r\n    const days = parseFloat(dayTimeParts.length > 1 ? dayTimeParts[0] : 0.0);\r\n    const time = dayTimeParts.length > 1 ? dayTimeParts[1] : dayTimeParts[0];\r\n    let secs = 0.0;\r\n    const timeParts = time.split(\":\").reverse();\r\n    for (let j = 0; j < timeParts.length; ++j) {\r\n        secs += parseFloat(timeParts[j]) * Math.pow(60, j);\r\n    }\r\n    return (days * 24 * 60 * 60) + secs;\r\n}\r\n","import { StateObject } from \"../../collections/stateful\";\r\nimport { espTime2Seconds } from \"../../util/esp\";\r\nimport { ECLTimer, Service } from \"../services/WsWorkunits\";\r\n\r\nexport interface ECLTimerEx extends ECLTimer {\r\n    Wuid: string;\r\n    Seconds: number;\r\n    HasSubGraphId: boolean;\r\n}\r\n\r\nexport class Timer extends StateObject<ECLTimerEx, ECLTimerEx> implements ECLTimerEx {\r\n    protected connection: Service;\r\n\r\n    get properties(): ECLTimer { return this.get(); }\r\n    get Wuid(): string { return this.get(\"Wuid\"); }\r\n    get Name(): string { return this.get(\"Name\"); }\r\n    get Value(): string { return this.get(\"Value\"); }\r\n    get Seconds(): number { return this.get(\"Seconds\"); }\r\n    get GraphName(): string { return this.get(\"GraphName\"); }\r\n    get SubGraphId(): number { return this.get(\"SubGraphId\"); }\r\n    get HasSubGraphId(): boolean { return this.get(\"HasSubGraphId\"); }\r\n    get count(): number { return this.get(\"count\"); }\r\n\r\n    constructor(connection: Service | string, wuid: string, eclTimer: ECLTimer) {\r\n        super();\r\n        if (connection instanceof Service) {\r\n            this.connection = connection;\r\n        } else {\r\n            this.connection = new Service(connection);\r\n        }\r\n\r\n        const secs = espTime2Seconds(eclTimer.Value);\r\n        this.set({\r\n            Wuid: wuid,\r\n            Seconds: Math.round(secs * 1000) / 1000,\r\n            HasSubGraphId: eclTimer.SubGraphId !== undefined,\r\n            XXX: true,\r\n            ...eclTimer\r\n        });\r\n    }\r\n}\r\n","import { Cache, IEvent, StateCallback, StateEvents, StateObject, StatePropCallback } from \"../../collections/stateful\";\r\nimport { logger } from \"../../util/Logging\";\r\nimport { IObserverHandle } from \"../../util/observer\";\r\nimport { PrimativeValueMap, XMLNode } from \"../../util/SAXParser\";\r\nimport { ESPExceptions } from \"../comms/transport\";\r\nimport { ActiveWorkunit } from \"../services/WsSMC\";\r\nimport * as WsTopology from \"../services/WsTopology\";\r\nimport * as WsWorkunits from \"../services/WsWorkunits\";\r\nimport { createXGMMLGraph, Graph, GraphCache, IECLDefintion, XGMMLGraph } from \"./Graph\";\r\nimport { Resource } from \"./Resource\";\r\nimport { Result, ResultCache } from \"./Result\";\r\nimport { SourceFile } from \"./SourceFile\";\r\nimport { Timer } from \"./Timer\";\r\n\r\nexport const WUStateID = WsWorkunits.WUStateID;\r\n\r\nexport class WorkunitCache extends Cache<{ Wuid: string }, Workunit> {\r\n    constructor() {\r\n        super((obj) => {\r\n            return obj.Wuid;\r\n        });\r\n    }\r\n}\r\nconst _workunits = new WorkunitCache();\r\n\r\nexport interface DebugState {\r\n    sequence: number;\r\n    state: string;\r\n    [key: string]: any;\r\n}\r\n\r\nexport interface IWorkunit {\r\n    ResultViews: any[];\r\n    HelpersCount: number;\r\n}\r\n\r\nexport interface IDebugWorkunit {\r\n    DebugState?: DebugState;\r\n}\r\n\r\nexport type WorkunitEvents = \"completed\" | StateEvents;\r\nexport type UWorkunitState = WsWorkunits.ECLWorkunit & WsWorkunits.Workunit & ActiveWorkunit & IWorkunit & IDebugWorkunit;\r\nexport type IWorkunitState = WsWorkunits.ECLWorkunit | WsWorkunits.Workunit | ActiveWorkunit | IWorkunit | IDebugWorkunit;\r\nexport class Workunit extends StateObject<UWorkunitState, IWorkunitState> implements WsWorkunits.Workunit {\r\n    connection: WsWorkunits.Service;\r\n    topologyConnection: WsTopology.Service;\r\n\r\n    private _debugMode: boolean = false;\r\n    private _debugAllGraph: any;\r\n    private _submitAction: WsWorkunits.WUAction;\r\n    private _monitorHandle: any;\r\n    private _monitorTickCount: number = 0;\r\n\r\n    //  Accessors  ---\r\n    get properties(): WsWorkunits.ECLWorkunit & WsWorkunits.Workunit { return this.get(); }\r\n    get Wuid(): string { return this.get(\"Wuid\"); }\r\n    get Owner(): string { return this.get(\"Owner\", \"\"); }\r\n    get Cluster(): string { return this.get(\"Cluster\", \"\"); }\r\n    get Jobname(): string { return this.get(\"Jobname\", \"\"); }\r\n    get Description(): string { return this.get(\"Description\", \"\"); }\r\n    get ActionEx(): string { return this.get(\"ActionEx\", \"\"); }\r\n    get StateID(): WsWorkunits.WUStateID { return this.get(\"StateID\", WsWorkunits.WUStateID.Unknown); }\r\n    get State(): string { return WsWorkunits.WUStateID[this.StateID]; }\r\n    get Protected(): boolean { return this.get(\"Protected\", false); }\r\n    get Exceptions(): WsWorkunits.Exceptions { return this.get(\"Exceptions\", { ECLException: [] }); }\r\n    get ResultViews(): any[] { return this.get(\"ResultViews\", []); }\r\n\r\n    private _resultCache = new ResultCache();\r\n    get ResultCount(): number { return this.get(\"ResultCount\", 0); }\r\n    get Results(): WsWorkunits.Results { return this.get(\"Results\", { ECLResult: [] }); }\r\n    get CResults(): Result[] {\r\n        return this.Results.ECLResult.map((eclResult) => {\r\n            return this._resultCache.get(eclResult, () => {\r\n                return new Result(this.connection, this.Wuid, eclResult, this.ResultViews);\r\n            });\r\n        });\r\n    }\r\n    get SequenceResults(): { [key: number]: Result } {\r\n        const retVal = {};\r\n        this.CResults.forEach((result) => {\r\n            retVal[result.Sequence] = result;\r\n        });\r\n        return retVal;\r\n    };\r\n    get Timers(): WsWorkunits.Timers { return this.get(\"Timers\", { ECLTimer: [] }); }\r\n    get CTimers(): Timer[] {\r\n        return this.Timers.ECLTimer.map((eclTimer) => {\r\n            return new Timer(this.connection, this.Wuid, eclTimer);\r\n        });\r\n    }\r\n\r\n    private _graphCache = new GraphCache();\r\n    get GraphCount(): number { return this.get(\"GraphCount\", 0); }\r\n    get Graphs(): WsWorkunits.Graphs { return this.get(\"Graphs\", { ECLGraph: [] }); }\r\n    get CGraphs(): Graph[] {\r\n        return this.Graphs.ECLGraph.map((eclGraph) => {\r\n            return this._graphCache.get(eclGraph, () => {\r\n                return new Graph(this.connection, this.Wuid, eclGraph, this.CTimers);\r\n            });\r\n        });\r\n    }\r\n    get ThorLogList(): WsWorkunits.ThorLogList { return this.get(\"ThorLogList\"); }\r\n    get ResourceURLCount(): number { return this.get(\"ResourceURLCount\", 0); }\r\n    get ResourceURLs(): WsWorkunits.ResourceURLs { return this.get(\"ResourceURLs\", { URL: [] }); }\r\n    get CResourceURLs(): Resource[] {\r\n        return this.ResourceURLs.URL.map((url) => {\r\n            return new Resource(this.connection, this.Wuid, url);\r\n        });\r\n    }\r\n    get TotalClusterTime(): string { return this.get(\"TotalClusterTime\", \"\"); }\r\n    get DateTimeScheduled(): Date { return this.get(\"DateTimeScheduled\"); }\r\n    get IsPausing(): boolean { return this.get(\"IsPausing\"); }\r\n    get ThorLCR(): boolean { return this.get(\"ThorLCR\"); }\r\n    get ApplicationValues(): WsWorkunits.ApplicationValues { return this.get(\"ApplicationValues\", { ApplicationValue: [] }); }\r\n    get HasArchiveQuery(): boolean { return this.get(\"HasArchiveQuery\"); }\r\n    get StateEx(): string { return this.get(\"StateEx\"); }\r\n    get PriorityClass(): number { return this.get(\"PriorityClass\"); }\r\n    get PriorityLevel(): number { return this.get(\"PriorityLevel\"); }\r\n    get Snapshot(): string { return this.get(\"Snapshot\"); }\r\n    get ResultLimit(): number { return this.get(\"ResultLimit\"); }\r\n    get EventSchedule(): number { return this.get(\"EventSchedule\"); }\r\n    get HaveSubGraphTimings(): boolean { return this.get(\"HaveSubGraphTimings\"); }\r\n    get Query(): WsWorkunits.Query { return this.get(\"Query\"); }\r\n    get HelpersCount(): number { return this.get(\"HelpersCount\", 0); }\r\n    get Helpers(): WsWorkunits.Helpers { return this.get(\"Helpers\", { ECLHelpFile: [] }); }\r\n    get DebugValues(): WsWorkunits.DebugValues { return this.get(\"DebugValues\"); }\r\n    get AllowedClusters(): WsWorkunits.AllowedClusters { return this.get(\"AllowedClusters\"); }\r\n    get ErrorCount(): number { return this.get(\"ErrorCount\", 0); }\r\n    get WarningCount(): number { return this.get(\"WarningCount\", 0); }\r\n    get InfoCount(): number { return this.get(\"InfoCount\", 0); }\r\n    get AlertCount(): number { return this.get(\"AlertCount\", 0); }\r\n    get SourceFileCount(): number { return this.get(\"SourceFileCount\", 0); }\r\n    get SourceFiles(): WsWorkunits.SourceFiles { return this.get(\"SourceFiles\", { ECLSourceFile: [] }); }\r\n    get CSourceFiles(): SourceFile[] {\r\n        return this.SourceFiles.ECLSourceFile.map((eclSourceFile) => {\r\n            return new SourceFile(this.connection, this.Wuid, eclSourceFile);\r\n        });\r\n    }\r\n    get VariableCount(): number { return this.get(\"VariableCount\", 0); }\r\n    get Variables(): any { return this.get(\"Variables\", { ECLVariable: [] }); }\r\n    get TimerCount(): number { return this.get(\"TimerCount\", 0); }\r\n    get HasDebugValue(): boolean { return this.get(\"HasDebugValue\"); }\r\n    get ApplicationValueCount(): number { return this.get(\"ApplicationValueCount\", 0); }\r\n    get XmlParams(): string { return this.get(\"XmlParams\"); }\r\n    get AccessFlag(): number { return this.get(\"AccessFlag\"); }\r\n    get ClusterFlag(): number { return this.get(\"ClusterFlag\"); }\r\n    get ResultViewCount(): number { return this.get(\"ResultViewCount\", 0); }\r\n    get DebugValueCount(): number { return this.get(\"DebugValueCount\", 0); }\r\n    get WorkflowCount(): number { return this.get(\"WorkflowCount\", 0); }\r\n    get Archived(): boolean { return this.get(\"Archived\"); }\r\n    get DebugState(): DebugState { return this.get(\"DebugState\", {} as DebugState); }\r\n\r\n    //  Factories  ---\r\n    static create(href: string): Promise<Workunit>;\r\n    static create(connection: WsWorkunits.Service | string, topologyConnection?: WsTopology.Service | string): Promise<Workunit>;\r\n    static create(connection: WsWorkunits.Service | string, topologyConnection?: WsTopology.Service | string): Promise<Workunit> {\r\n        const retVal: Workunit = new Workunit(connection, topologyConnection);\r\n        return retVal.connection.WUCreate().then((response) => {\r\n            _workunits.set(retVal);\r\n            retVal.set(response.Workunit);\r\n            return retVal;\r\n        });\r\n    }\r\n\r\n    static attach(href: string, wuid: string, state?: WsWorkunits.ECLWorkunit | WsWorkunits.Workunit): Workunit;\r\n    static attach(connection: WsWorkunits.Service, topologyConnection: WsTopology.Service, wuid: string, state?: WsWorkunits.ECLWorkunit | WsWorkunits.Workunit): Workunit;\r\n    static attach(arg0: string | WsWorkunits.Service, arg1: string | WsTopology.Service, arg2?: WsWorkunits.ECLWorkunit | WsWorkunits.Workunit | string, state?: WsWorkunits.ECLWorkunit | WsWorkunits.Workunit): Workunit {\r\n        let retVal: Workunit;\r\n        if (arg0 instanceof WsWorkunits.Service && arg1 instanceof WsTopology.Service) {\r\n            retVal = _workunits.get({ Wuid: arg2 as string }, () => {\r\n                return new Workunit(arg0, arg1, arg2 as string);\r\n            });\r\n        } else {\r\n            retVal = _workunits.get({ Wuid: arg1 as string }, () => {\r\n                return new Workunit(arg0 as string, arg1 as string);\r\n            });\r\n            state = arg2 as WsWorkunits.ECLWorkunit | WsWorkunits.Workunit;\r\n        }\r\n        if (state) {\r\n            retVal.set(state);\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    static exists(wuid: string): boolean {\r\n        return _workunits.has({ Wuid: wuid });\r\n    }\r\n\r\n    //  ---  ---  ---\r\n    protected constructor(connection: WsWorkunits.Service | string, topologyConnection: WsTopology.Service | string, wuid?: string) {\r\n        super();\r\n        if (connection instanceof WsWorkunits.Service) {\r\n            this.connection = connection;\r\n        } else {\r\n            this.connection = new WsWorkunits.Service(connection);\r\n        }\r\n        if (topologyConnection instanceof WsTopology.Service) {\r\n            this.topologyConnection = topologyConnection;\r\n        } else {\r\n            this.topologyConnection = new WsTopology.Service(topologyConnection || connection as string);\r\n        }\r\n        this.clearState(wuid);\r\n    }\r\n\r\n    clearState(wuid: string) {\r\n        this.clear({\r\n            Wuid: wuid,\r\n            StateID: WUStateID.Unknown\r\n        });\r\n        this._monitorTickCount = 0;\r\n    }\r\n\r\n    update(request: Partial<WsWorkunits.WUUpdateRequest>, appData?: any, debugData?: any): Promise<Workunit> {\r\n        return this.connection.WUUpdate({\r\n            ...request, ...{\r\n                Wuid: this.Wuid,\r\n                StateOrig: this.State,\r\n                JobnameOrig: this.Jobname,\r\n                DescriptionOrig: this.Description,\r\n                ProtectedOrig: this.Protected,\r\n                ClusterOrig: this.Cluster,\r\n                ApplicationValues: appData,\r\n                DebugValues: debugData\r\n            }\r\n        }).then((response) => {\r\n            this.set(response.Workunit);\r\n            return this;\r\n        });\r\n    }\r\n\r\n    submit(_cluster?: string, action: WsWorkunits.WUAction = WsWorkunits.WUAction.Run, resultLimit?: number): Promise<Workunit> {\r\n        let clusterPromise;\r\n        if (_cluster !== void 0) {\r\n            clusterPromise = Promise.resolve(_cluster);\r\n        } else {\r\n            clusterPromise = this.topologyConnection.DefaultTpLogicalClusterQuery().then((response) => {\r\n                return response.Name;\r\n            });\r\n        }\r\n\r\n        this._debugMode = false;\r\n        if (action === WsWorkunits.WUAction.Debug) {\r\n            action = WsWorkunits.WUAction.Run;\r\n            this._debugMode = true;\r\n        }\r\n\r\n        return clusterPromise.then((cluster) => {\r\n            return this.connection.WUUpdate({\r\n                Wuid: this.Wuid,\r\n                Action: action,\r\n                ResultLimit: resultLimit\r\n            }, {}, { Debug: this._debugMode }).then((response) => {\r\n                this.set(response.Workunit);\r\n                this._submitAction = action;\r\n                return this.connection.WUSubmit({ Wuid: this.Wuid, Cluster: cluster }).then(() => {\r\n                    return this;\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    isComplete(): boolean {\r\n        switch (this.StateID) {\r\n            case WUStateID.Compiled:\r\n                return this.ActionEx === \"compile\" || this._submitAction === WsWorkunits.WUAction.Compile;\r\n            case WUStateID.Completed:\r\n            case WUStateID.Failed:\r\n            case WUStateID.Aborted:\r\n            case WUStateID.NotFound:\r\n                return true;\r\n            default:\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isFailed() {\r\n        switch (this.StateID) {\r\n            case WUStateID.Failed:\r\n                return true;\r\n            default:\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isDeleted() {\r\n        switch (this.StateID) {\r\n            case WUStateID.NotFound:\r\n                return true;\r\n            default:\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isDebugging() {\r\n        switch (this.StateID) {\r\n            case WUStateID.DebugPaused:\r\n            case WUStateID.DebugRunning:\r\n                return true;\r\n            default:\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isRunning(): boolean {\r\n        switch (this.StateID) {\r\n            case WUStateID.Compiled:\r\n            case WUStateID.Running:\r\n            case WUStateID.Aborting:\r\n            case WUStateID.Blocked:\r\n            case WUStateID.DebugPaused:\r\n            case WUStateID.DebugRunning:\r\n                return true;\r\n            default:\r\n        }\r\n        return false;\r\n    }\r\n\r\n    setToFailed() {\r\n        return this.WUAction(\"SetToFailed\");\r\n    }\r\n\r\n    pause() {\r\n        return this.WUAction(\"Pause\");\r\n    }\r\n\r\n    pauseNow() {\r\n        return this.WUAction(\"PauseNow\");\r\n    }\r\n\r\n    resume() {\r\n        return this.WUAction(\"Resume\");\r\n    }\r\n\r\n    abort() {\r\n        return this.WUAction(\"Abort\");\r\n    }\r\n\r\n    delete() {\r\n        return this.WUAction(\"Delete\");\r\n    }\r\n\r\n    restore() {\r\n        return this.WUAction(\"Restore\");\r\n    }\r\n\r\n    deschedule() {\r\n        return this.WUAction(\"Deschedule\");\r\n    }\r\n\r\n    reschedule() {\r\n        return this.WUAction(\"Reschedule\");\r\n    }\r\n\r\n    refresh(full: boolean = false): Promise<Workunit> {\r\n        const refreshPromise: Promise<WsWorkunits.WUInfoResponse | WsWorkunits.WUQueryResponse> = full ? this.WUInfo() : this.WUQuery();\r\n        const debugPromise = this.debugStatus();\r\n        return Promise.all([\r\n            refreshPromise,\r\n            debugPromise\r\n        ]).then(() => {\r\n            return this;\r\n        });\r\n    }\r\n\r\n    fetchResults(): Promise<Result[]> {\r\n        return this.WUInfo({ IncludeResults: true }).then(() => {\r\n            return this.CResults;\r\n        });\r\n    };\r\n\r\n    //  Monitoring  ---\r\n    protected _monitor(): void {\r\n        if (this._monitorHandle || this.isComplete()) {\r\n            this._monitorTickCount = 0;\r\n            return;\r\n        }\r\n\r\n        this._monitorHandle = setTimeout(() => {\r\n            const refreshPromise: Promise<any> = this.hasEventListener() ? this.refresh(true) : Promise.resolve(null);\r\n            refreshPromise.then(() => {\r\n                this._monitor();\r\n            });\r\n            delete this._monitorHandle;\r\n        }, this._monitorTimeoutDuraction());\r\n    }\r\n\r\n    private _monitorTimeoutDuraction(): number {\r\n        ++this._monitorTickCount;\r\n        if (this._monitorTickCount <= 1) {\r\n            return 0;\r\n        } else if (this._monitorTickCount <= 3) {\r\n            return 500;\r\n        } else if (this._monitorTickCount <= 10) {\r\n            return 1000;\r\n        } else if (this._monitorTickCount <= 20) {\r\n            return 3000;\r\n        } else if (this._monitorTickCount <= 30) {\r\n            return 5000;\r\n        }\r\n        return 10000;\r\n    }\r\n\r\n    //  Events  ---\r\n    on(eventID: WorkunitEvents, propIDorCallback: StateCallback | keyof UWorkunitState, callback?: StatePropCallback): Workunit {\r\n        if (this.isCallback(propIDorCallback)) {\r\n            switch (eventID) {\r\n                case \"completed\":\r\n                    super.on(\"propChanged\", \"StateID\", (changeInfo: IEvent) => {\r\n                        if (this.isComplete()) {\r\n                            propIDorCallback([changeInfo]);\r\n                        }\r\n                    });\r\n                    break;\r\n                case \"changed\":\r\n                    super.on(eventID, propIDorCallback);\r\n                    break;\r\n                default:\r\n            }\r\n        } else {\r\n            switch (eventID) {\r\n                case \"changed\":\r\n                    super.on(eventID, propIDorCallback, callback);\r\n                    break;\r\n                default:\r\n            }\r\n        }\r\n        this._monitor();\r\n        return this;\r\n    }\r\n\r\n    watch(callback: StateCallback, triggerChange: boolean = true): IObserverHandle {\r\n        if (typeof callback !== \"function\") {\r\n            throw new Error(\"Invalid Callback\");\r\n        }\r\n        if (triggerChange) {\r\n            setTimeout(() => {\r\n                const props: any = this.properties;\r\n                const changes: IEvent[] = [];\r\n                for (const key in props) {\r\n                    if (props.hasOwnProperty(props)) {\r\n                        changes.push({ id: key, newValue: props[key], oldValue: undefined });\r\n                    }\r\n                }\r\n                callback(changes);\r\n            }, 0);\r\n        }\r\n        const retVal = super.on(\"changed\", callback);\r\n        this._monitor();\r\n        return retVal;\r\n    }\r\n\r\n    watchUntilComplete(callback?: StateCallback): Promise<this> {\r\n        return new Promise((resolve, _) => {\r\n            const watchHandle = this.watch((changes) => {\r\n                if (callback) {\r\n                    callback(changes);\r\n                }\r\n                if (this.isComplete()) {\r\n                    watchHandle.release();\r\n                    resolve(this);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    watchUntilRunning(callback?: StateCallback): Promise<this> {\r\n        return new Promise((resolve, _) => {\r\n            const watchHandle = this.watch((changes) => {\r\n                if (callback) {\r\n                    callback(changes);\r\n                }\r\n                if (this.isComplete() || this.isRunning()) {\r\n                    watchHandle.release();\r\n                    resolve(this);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    //  WsWorkunits passthroughs  ---\r\n    protected WUQuery(_request: Partial<WsWorkunits.WUQueryRequest> = {}): Promise<WsWorkunits.WUQueryResponse> {\r\n        return this.connection.WUQuery({ ..._request, Wuid: this.Wuid }).then((response) => {\r\n            this.set(response.Workunits.ECLWorkunit[0]);\r\n            return response;\r\n        }).catch((e: ESPExceptions) => {\r\n            //  deleted  ---\r\n            const wuMissing = e.Exception.some((exception) => {\r\n                if (exception.Code === 20081) {\r\n                    this.clearState(this.Wuid);\r\n                    this.set(\"StateID\", WUStateID.NotFound);\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n            if (!wuMissing) {\r\n                logger.warning(\"Unexpected exception:  \");\r\n                throw e;\r\n            }\r\n            return {};\r\n        });\r\n    }\r\n\r\n    protected WUCreate() {\r\n        return this.connection.WUCreate().then((response) => {\r\n            this.set(response.Workunit);\r\n            _workunits.set(this);\r\n            return response;\r\n        });\r\n    }\r\n\r\n    protected WUInfo(_request: Partial<WsWorkunits.WUInfoRequest> = {}): Promise<WsWorkunits.WUInfoResponse> {\r\n        const includeResults = _request.IncludeResults || _request.IncludeResultsViewNames;\r\n        return this.connection.WUInfo({\r\n            ..._request, Wuid: this.Wuid,\r\n            IncludeResults: includeResults,\r\n            IncludeResultsViewNames: includeResults,\r\n            SuppressResultSchemas: false\r\n        }).then((response) => {\r\n            if (response.Workunit.ResourceURLCount) {\r\n                response.Workunit.ResourceURLCount = response.Workunit.ResourceURLCount - 1;\r\n            }\r\n            if (response.Workunit.ResourceURLs && response.Workunit.ResourceURLs.URL) {\r\n                response.Workunit.ResourceURLs.URL = response.Workunit.ResourceURLs.URL.filter((_, idx) => {\r\n                    return idx > 0;\r\n                });\r\n            }\r\n            this.set(response.Workunit);\r\n            this.set({\r\n                ResultViews: includeResults ? response.ResultViews : [],\r\n                HelpersCount: response.Workunit.Helpers && response.Workunit.Helpers.ECLHelpFile ? response.Workunit.Helpers.ECLHelpFile.length : 0\r\n            });\r\n            return response;\r\n        }).catch((e: ESPExceptions) => {\r\n            //  deleted  ---\r\n            const wuMissing = e.Exception.some((exception) => {\r\n                if (exception.Code === 20080) {\r\n                    this.clearState(this.Wuid);\r\n                    this.set(\"StateID\", WUStateID.NotFound);\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n            if (!wuMissing) {\r\n                logger.warning(\"Unexpected exception:  \");\r\n                throw e;\r\n            }\r\n            return {};\r\n        });\r\n    }\r\n\r\n    protected WUAction(actionType: WsWorkunits.WUActionType): Promise<WsWorkunits.WUActionResponse> {\r\n        return this.connection.WUAction({\r\n            Wuids: [this.Wuid],\r\n            WUActionType: actionType\r\n        }).then((response) => {\r\n            return this.refresh().then(() => {\r\n                this._monitor();\r\n                return response;\r\n            });\r\n        });\r\n    }\r\n\r\n    protected WUResubmit(clone: boolean, resetWorkflow: boolean): Promise<WsWorkunits.WUResubmitResponse> {\r\n        return this.connection.WUResubmit({\r\n            Wuids: [this.Wuid],\r\n            CloneWorkunit: clone,\r\n            ResetWorkflow: resetWorkflow\r\n        }).then((response) => {\r\n            this.clearState(this.Wuid);\r\n            return this.refresh().then(() => {\r\n                this._monitor();\r\n                return response;\r\n            });\r\n        });\r\n    }\r\n\r\n    protected WUCDebug(command: string, opts: Object = {}): Promise<XMLNode> {\r\n        let optsStr = \"\";\r\n        for (const key in opts) {\r\n            if (opts.hasOwnProperty(key)) {\r\n                optsStr += ` ${key}='${opts[key]}'`;\r\n            }\r\n        }\r\n        return this.connection.WUCDebug({\r\n            Wuid: this.Wuid,\r\n            Command: `<debug:${command} uid='${this.Wuid}'${optsStr}/>`\r\n        }).then((response) => {\r\n            return response;\r\n        });\r\n    }\r\n\r\n    debug(command: string, opts?: Object): Promise<XMLNode> {\r\n        if (!this.isDebugging()) {\r\n            return Promise.resolve(null);\r\n        }\r\n        return this.WUCDebug(command, opts).then((response: XMLNode) => {\r\n            return response.children.filter((xmlNode) => {\r\n                return xmlNode.name === command;\r\n            })[0];\r\n        }).catch((_) => {\r\n            // console.log(e);\r\n            return Promise.resolve(null);\r\n        });\r\n    }\r\n\r\n    debugStatus(): Promise<XMLNode> {\r\n        if (!this.isDebugging()) {\r\n            return Promise.resolve<any>({\r\n                DebugState: { state: \"unknown\" }\r\n            });\r\n        }\r\n        return this.debug(\"status\").then((response) => {\r\n            response = response || new XMLNode(\"null\");\r\n            const debugState = { ...this.DebugState, ...response.attributes };\r\n            this.set({\r\n                DebugState: debugState\r\n            });\r\n            return response;\r\n        });\r\n    }\r\n\r\n    debugContinue(mode = \"\"): Promise<XMLNode> {\r\n        return this.debug(\"continue\", {\r\n            mode\r\n        });\r\n    }\r\n\r\n    debugStep(mode): Promise<XMLNode> {\r\n        return this.debug(\"step\", {\r\n            mode\r\n        });\r\n    }\r\n\r\n    debugPause(): Promise<XMLNode> {\r\n        return this.debug(\"interrupt\");\r\n    }\r\n\r\n    debugQuit(): Promise<XMLNode> {\r\n        return this.debug(\"quit\");\r\n    }\r\n\r\n    debugDeleteAllBreakpoints(): Promise<XMLNode> {\r\n        return this.debug(\"delete\", {\r\n            idx: 0\r\n        });\r\n    }\r\n\r\n    protected debugBreakpointResponseParser(rootNode) {\r\n        return rootNode.children.map((childNode) => {\r\n            if (childNode.name === \"break\") {\r\n                return childNode.attributes;\r\n            }\r\n        });\r\n    }\r\n\r\n    debugBreakpointAdd(id, mode, action): Promise<XMLNode> {\r\n        return this.debug(\"breakpoint\", {\r\n            id,\r\n            mode,\r\n            action\r\n        }).then((rootNode) => this.debugBreakpointResponseParser(rootNode));\r\n    }\r\n\r\n    debugBreakpointList(): Promise<any[]> {\r\n        return this.debug(\"list\").then((rootNode) => {\r\n            return this.debugBreakpointResponseParser(rootNode);\r\n        });\r\n    }\r\n\r\n    debugGraph(): Promise<XGMMLGraph> {\r\n        if (this._debugAllGraph && this.DebugState[\"_prevGraphSequenceNum\"] === this.DebugState[\"graphSequenceNum\"]) {\r\n            return Promise.resolve(this._debugAllGraph);\r\n        }\r\n        return this.debug(\"graph\", { name: \"all\" }).then((response) => {\r\n            this.DebugState[\"_prevGraphSequenceNum\"] = this.DebugState[\"graphSequenceNum\"];\r\n            this._debugAllGraph = createXGMMLGraph(this.Wuid, response);\r\n            return this._debugAllGraph;\r\n        });\r\n    }\r\n\r\n    debugBreakpointValid(path): Promise<IECLDefintion[]> {\r\n        return this.debugGraph().then((graph) => {\r\n            return graph.breakpointLocations(path);\r\n        });\r\n    }\r\n\r\n    debugPrint(edgeID: string, startRow: number = 0, numRows: number = 10): Promise<PrimativeValueMap[]> {\r\n        return this.debug(\"print\", {\r\n            edgeID,\r\n            startRow,\r\n            numRows\r\n        }).then((response: XMLNode) => {\r\n            return response.children.map((rowNode) => {\r\n                const retVal: PrimativeValueMap = {};\r\n                rowNode.children.forEach((cellNode) => {\r\n                    retVal[cellNode.name] = cellNode.content;\r\n                });\r\n                return retVal;\r\n            });\r\n        });\r\n    }\r\n}\r\n","export { JSONPTransport, XHRGetTransport, XHRPostTransport, createTransport, setTransportFactory } from \"./comms/index\";\r\n\r\nexport { Service as WsWorkunits, WUAction } from \"./esp/services/WsWorkunits\";\r\nexport { Service as WsTopology } from \"./esp/services/WsTopology\";\r\nexport { Service as WsSMC } from \"./esp/services/WsSMC\";\r\nexport { Service as WsDFU } from \"./esp/services/WsDFU\";\r\n\r\nexport { Workunit } from \"./esp/ecl/Workunit\";\r\nexport { Result } from \"./esp/ecl/Result\";\r\nexport { SourceFile } from \"./esp/ecl/SourceFile\";\r\nexport { Resource } from \"./esp/ecl/Resource\";\r\nexport { Timer } from \"./esp/ecl/Timer\";\r\nexport { XGMMLGraph, GraphItem } from \"./esp/ecl/Graph\";\r\n\r\nexport { IObserverHandle } from \"./util/observer\";\r\nexport { espTime2Seconds } from \"./util/esp\";\r\n\r\nexport const commsMsg = \"Hello and Welcome no xmldom\";\r\n","// DOM Parser polyfill  ---\r\nimport { DOMParser } from \"xmldom\";\r\nimport { root } from \"./util/runtime\";\r\nroot.DOMParser = DOMParser;\r\n\r\n//  XHR polyfill  ---\r\nimport * as nodeRequest from \"request\";\r\nimport { initNodeRequest } from \"./comms/xhr\";\r\ninitNodeRequest(nodeRequest);\r\n\r\n//  Alternative XHR polyfill   ---\r\n//  import { request as d3Request } from \"d3-request\";\r\n//  initD3Request(d3Request);\r\n\r\nexport * from \"./index\";\r\n"],"names":["tslib_1.__extends","createTransport","WUAction","WUStateID","WsWorkunits.WUStateID","WsWorkunits.Service","WsTopology.Service","WsWorkunits.WUAction","DOMParser"],"mappings":"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"}